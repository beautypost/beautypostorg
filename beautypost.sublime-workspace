{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ge",
				"setRequestGetValue〔function〕"
			],
			[
				"scaleLi",
				"scaleLineWidth"
			],
			[
				"Questio",
				"QuestionValue"
			],
			[
				"REDI",
				"REDIRECTURL〔constant〕"
			],
			[
				"bu",
				"button_text"
			],
			[
				"Se",
				"SearchObject"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"act",
				"$actressID〔variable〕"
			],
			[
				"pa",
				"padding"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"border-bo",
				"border-bottom-width"
			],
			[
				"url",
				"urlencode"
			],
			[
				"font",
				"font-size"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"end",
				"endforeach"
			],
			[
				"paddin",
				"padding-right"
			],
			[
				"bg",
				"background-color"
			],
			[
				"ba",
				"background-position"
			],
			[
				"bank",
				"bank"
			],
			[
				"padding",
				"padding-top"
			],
			[
				"bor",
				"border-width"
			],
			[
				"DE",
				"DEFAULTGENRE"
			],
			[
				"score",
				"target-score"
			],
			[
				"border-c",
				"border-color"
			],
			[
				"back",
				"background-color"
			],
			[
				"User",
				"UserHistory"
			],
			[
				"Nu",
				"NullCheckData"
			],
			[
				"newss",
				"newssite_id"
			],
			[
				"text",
				"text-align"
			],
			[
				"pre",
				"prerssdescription"
			],
			[
				"ca",
				"calendar"
			],
			[
				"bac",
				"background-color"
			],
			[
				"news",
				"newses"
			],
			[
				"mysql_fe",
				"mysql_fetch_assoc"
			],
			[
				"item",
				"itemValue"
			],
			[
				"pro",
				"professor"
			],
			[
				"profe",
				"professorid"
			],
			[
				"pref",
				"prefid"
			],
			[
				"var",
				"var_dump"
			],
			[
				"div",
				"div	Tag"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/Model/Genre.php",
			"settings":
			{
				"buffer_size": 13696,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminquestion/input.php",
			"settings":
			{
				"buffer_size": 3529,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminfavorite/index.php",
			"settings":
			{
				"buffer_size": 1930,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/QuestionController.php",
			"settings":
			{
				"buffer_size": 5340,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/ReviewController.php",
			"settings":
			{
				"buffer_size": 5020,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Pages/error.php",
			"settings":
			{
				"buffer_size": 633,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminquestion/index.php",
			"settings":
			{
				"buffer_size": 2858,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Config/core.php",
			"settings":
			{
				"buffer_size": 14384,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/MailMagazine/detail.php",
			"settings":
			{
				"buffer_size": 3026,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/Controller/ForgetpasswordController.php",
			"settings":
			{
				"buffer_size": 3636,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/LoginController.php",
			"settings":
			{
				"buffer_size": 3389,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Config/const.php",
			"settings":
			{
				"buffer_size": 4448,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Index/index.php",
			"settings":
			{
				"buffer_size": 16636,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Review/input.php",
			"settings":
			{
				"buffer_size": 7403,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Library/WebServer/Documents/kjn/app/.htaccess",
			"settings":
			{
				"buffer_size": 140,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Elements/common/cmnEnquete.php",
			"settings":
			{
				"buffer_size": 3572,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/AdminquestionController.php",
			"settings":
			{
				"buffer_size": 4958,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/Tenki.php",
			"settings":
			{
				"buffer_size": 3737,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Admincolumn/input.php",
			"settings":
			{
				"buffer_size": 4029,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Admincolumn/index.php",
			"settings":
			{
				"buffer_size": 2410,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/ItemsMonitor.php",
			"settings":
			{
				"buffer_size": 5881,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/AdminmonitorController.php",
			"settings":
			{
				"buffer_size": 5038,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Layouts/admin.ctp",
			"settings":
			{
				"buffer_size": 9615,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Library/WebServer/Documents/test/beautypostapi/php/example1.php",
			"settings":
			{
				"buffer_size": 2841,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/Controller/MypageController.php",
			"settings":
			{
				"buffer_size": 6391,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/CollectionController.php",
			"settings":
			{
				"buffer_size": 4999,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/AdminreviewController.php",
			"settings":
			{
				"buffer_size": 7322,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/BaseController.php",
			"settings":
			{
				"buffer_size": 2881,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Helper/UsefulHelper.php",
			"settings":
			{
				"buffer_size": 8545,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminmonitor/confirm.php",
			"settings":
			{
				"buffer_size": 8354,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminmonitor/input.php",
			"settings":
			{
				"buffer_size": 8459,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n            <!-- /section:basics/sidebar -->\n            <div class=\"main-content\">\n                    <?php $this->Useful->pagetitle($pagetitle,$pagecomment)?>\n                        <div class=\"row\">\n                            <div class=\"col-xs-12\">\n\n                    <?php\n                    if (isset($validationErrors) && is_array($validationErrors)) {\n                        foreach ($validationErrors as $key => $values) {\n                            foreach ($values as $value) {\n                                echo '<p class=\"error\">'.$value.'</p>';\n                            }\n                            // echo $this->Form->error('Model.'.$key);\n                        }\n                    }\n                    ?>\n\n<form class=\"form-horizontal\" role=\"form\" method=\"post\" action=\"<?php echo WEBROOT.$this->name?>/input\" enctype=\"multipart/form-data\">\n    <!-- #section:elements.form -->\n\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">ニックネーム</label>\n        <div class=\"col-sm-10\"><input type=\"text\" name=\"data[username]\" value=\"<?php echo $data['ItemsMonitor']['user_username']?>\" required></div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">性別</label>\n        <div class=\"col-sm-10\">\n                                    <?php echo $this->Useful->radio('data[gender]',$Gender['gender'],$data['ItemsMonitor']['user_gender'])?>\n                        </div>\n                    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">生年月日</label>\n        <div class=\"col-sm-10\">\n                                <select name=\"data[year]\" tabindex=\"1\" style=\"width:80px\" required>\n                                    <?php echo $this->Useful->option($Year['year'],$data['ItemsMonitor']['user_year'])?>\n                                </select>\n                                <span class=\"unit\">年</span>\n                                <select name=\"data[month]\" tabindex=\"1\" style=\"width:80px\" required>\n                                    <?php echo $this->Useful->option($Month['month'],$data['ItemsMonitor']['user_month'])?>\n                                </select>\n                                <span class=\"unit\">月</span>\n                                <select name=\"data[day]\" tabindex=\"1\" style=\"width:80px\" required>\n                                    <?php echo $this->Useful->option($Day['day'],$data['ItemsMonitor']['user_day'])?>\n                                </select>\n                                <span class=\"unit\">日</span>\n                                </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">種別</label>\n        <div class=\"col-sm-10\">\n                                <select name=\"data[job]\" tabindex=\"1\" style=\"width:80px\" required>\n                                    <?php echo $this->Useful->option($Job['job'],$data['ItemsMonitor']['user_job'])?>\n                                </select>\n                                </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">肌質</label>\n        <div class=\"col-sm-10\">\n                                    <select name=\"data[skin]\" tabindex=\"1\" style=\"width:80px\" required>\n                                        <?php echo $this->Useful->option($Skin['skin'],$data['ItemsMonitor']['user_skin'])?>\n                                    </select>\n                                    </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">商品</label>\n        <div class=\"col-sm-10\">\n                                    <select name=\"data[item_id]\" tabindex=\"1\" style=\"width:80px\" required>\n                                        <?php echo $this->Useful->option($Items,$data['ItemsMonitor']['item_id'])?>\n                                    </select>\n\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">商品の満足度</label>\n        <div class=\"col-sm-10\">\n                                    <table class=\"table table-striped table-bordered table-hover\">\n                                        <thead>\n                                            <tr>\n                                                <th> </th>\n                                                <th><span class=\"rsp-ooxx\">0</span><span class=\"rsp-xxoo\">無評価</span></th>\n                                                <th>1<span class=\"rsp-xxoo\">点</span></th>\n                                                <th>2<span class=\"rsp-xxoo\">点</span></th>\n                                                <th>3<span class=\"rsp-xxoo\">点</span></th>\n                                                <th>4<span class=\"rsp-xxoo\">点</span></th>\n                                                <th>5<span class=\"rsp-xxoo\">点</span></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <th>価格</th>\n                                                <?php echo $this->Useful->vradio('point1',$data['ItemsMonitor']['point1'])?>\n                                            </tr>\n                                            <tr>\n                                                <th>使いやすさ</th>\n                                                <?php echo $this->Useful->vradio('point2',$data['ItemsMonitor']['point2'])?>\n                                            </tr>\n                                            <tr>\n                                                <th>デザイン</th>\n                                                <?php echo $this->Useful->vradio('point3',$data['ItemsMonitor']['point3'])?>\n                                            </tr>\n                                            <tr>\n                                                <th>機能</th>\n                                                <?php echo $this->Useful->vradio('point4',$data['ItemsMonitor']['point4'])?>\n                                            </tr>\n                                            <tr>\n                                                <th>継続性</th>\n                                                <?php echo $this->Useful->vradio('point5',$data['ItemsMonitor']['point5'])?>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">タイトル</label>\n        <div class=\"col-sm-10\">\n                                    <input type=\"text\" name=\"data[title]\" value=\"<?php echo $data['ItemsMonitor']['title']?>\" required>\n                                </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-2 control-label no-padding-right\" for=\"form-field-1\">\n    レビューコメント</label>\n        <div class=\"col-sm-10\">\n                                    <textarea name=\"data[comment]\" id=\"\" cols=\"30\" rows=\"10\" required><?php echo $data['ItemsMonitor']['title']?></textarea>\n</div>\n    </div>\n                                    <div class=\"clearfix form-actions\">\n                                        <div class=\"col-md-offset-3 col-md-9\">\n                                            <button class=\"btn btn-success\" type=\"submit\">\n                                                確認画面へ\n                                            </button>\n                                            &nbsp; &nbsp; &nbsp;\n                                            <button class=\"btn\" type=\"reset\">\n                                                <i class=\"ace-icon fa fa-undo bigger-110\"></i>\n                                                Reset\n                                            </button>\n                                        </div>\n                                    </div>\n\n            <input type=\"hidden\" name=\"data[id]\" value=\"<?php echo $data['ItemsMonitor']['id']?>\">\n            </form>\n    </div>\n    </div>\n    </div>",
			"settings":
			{
				"buffer_size": 8449,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/AppController.php",
			"settings":
			{
				"buffer_size": 5267,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminuser/input.php",
			"settings":
			{
				"buffer_size": 6320,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/Snsuser.php",
			"settings":
			{
				"buffer_size": 10618,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminkeyword/input.php",
			"settings":
			{
				"buffer_size": 2199,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminfavorite/input.php",
			"settings":
			{
				"buffer_size": 2494,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/ItemsReview.php",
			"settings":
			{
				"buffer_size": 6031,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Elements/ItemList.php",
			"settings":
			{
				"buffer_size": 5389,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/IndexController.php",
			"settings":
			{
				"buffer_size": 3378,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminitem/input.php",
			"settings":
			{
				"buffer_size": 16413,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminmaster/input.php",
			"settings":
			{
				"buffer_size": 2184,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/Component/UserCComponent.php",
			"settings":
			{
				"buffer_size": 3046,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Mypage/index.php",
			"settings":
			{
				"buffer_size": 4306,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/GoogleloginController.php",
			"settings":
			{
				"buffer_size": 3750,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/AdminuserController.php",
			"settings":
			{
				"buffer_size": 5068,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminuser/index.php",
			"settings":
			{
				"buffer_size": 2124,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Collection/index.php",
			"settings":
			{
				"buffer_size": 7357,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/Item.php",
			"settings":
			{
				"buffer_size": 6347,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminitem/confirm.php",
			"settings":
			{
				"buffer_size": 14809,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminmaster/confirm.php",
			"settings":
			{
				"buffer_size": 2062,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/AdminmasterController.php",
			"settings":
			{
				"buffer_size": 4400,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminquestion/confirm.php",
			"settings":
			{
				"buffer_size": 2878,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/Question.php",
			"settings":
			{
				"buffer_size": 3996,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Column/index.html",
			"settings":
			{
				"buffer_size": 6683,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/View/Column/category.php",
			"settings":
			{
				"buffer_size": 4452,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/QuestionLog.php",
			"settings":
			{
				"buffer_size": 1712,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/Component/PagerComponent.php",
			"settings":
			{
				"buffer_size": 2058,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/MailmagazineController.php",
			"settings":
			{
				"buffer_size": 2564,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Question/input.php",
			"settings":
			{
				"buffer_size": 464,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Question/detail.php",
			"settings":
			{
				"buffer_size": 3715,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/View/Collection/m_index.php",
			"settings":
			{
				"buffer_size": 14773,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Compare/index.php",
			"settings":
			{
				"buffer_size": 2180,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/Controller/Component/ItemCComponent.php",
			"settings":
			{
				"buffer_size": 3900,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Controller/CompareController.php",
			"settings":
			{
				"buffer_size": 5546,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Compare/popup.php",
			"settings":
			{
				"buffer_size": 10791,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 2194 files for \"between\"\n\n/Library/WebServer/Documents/beautypost/app/Controller/Component/CalendarComponent.php:\n   14  \n   15  		$alldate = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n   16: 		$sql = \"select DATE(newsdate) as newsdate from news where newsdate between '\".$year.\"-\".$month.\"-01 00:00:00' and '\".$year.\"-\".$month.\"-\".$alldate.\" 23:59:59'\";\n   17  		$alldata = $NewsObj->query($sql);\n   18  \n\n/Library/WebServer/Documents/beautypost/app/Controller/Component/ItemCComponent.php:\n   55  			// $con[]['price >='] = (int)($data['GenrePriceLow']);\n   56  			// $con[]['price <='] = (int)($data['GenrePriceHigh']);\n   57:             $con[]['price between ? AND ?'] = array((integer)$data['GenrePriceLow'],(integer)$data['GenrePriceHigh']);\n   58  		}\n   59          }\n\n/Library/WebServer/Documents/beautypost/app/Vendor/Google/src/contrib/Google_BooksService.php:\n  586       * @param string $shelf ID of bookshelf with the volume.\n  587       * @param string $volumeId ID of volume to move.\n  588:      * @param int $volumePosition Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)\n  589       * @param array $optParams Optional parameters.\n  590       *\n\n/Library/WebServer/Documents/beautypost/app/Vendor/Google/src/contrib/Google_CustomsearchService.php:\n   50       * @opt_param string dateRestrict Specifies all search results are from a time period\n   51       * @opt_param string safe Search safety level\n   52:      * @opt_param string c2coff Turns off the translation between zh-CN and zh-TW.\n   53       * @opt_param string googlehost The local Google domain to use to perform the search.\n   54       * @opt_param string hq Appends the extra query terms to the query.\n\n/Library/WebServer/Documents/beautypost/app/Vendor/Google/src/contrib/Google_GanService.php:\n   40       * @opt_param string pageToken The value of 'nextPageToken' from the previous page. Optional.\n   41       * @opt_param string maxResults Max number of items to return in this page. Optional. Defaults to 20.\n   42:      * @opt_param int minPayoutRank A value between 1 and 4, where 1 represents the quartile of advertisers with the lowest ranks and 4 represents the quartile of advertisers with the highest ranks. Filters out all advertisers with a lower rank than the given quartile. For example if a 2 was given only advertisers with a payout rank of 25 or higher would be included. Optional.\n   43       * @return Google_Advertisers\n   44       */\n   ..\n  268       * @opt_param string pageToken The value of 'nextPageToken' from the previous page. Optional.\n  269       * @opt_param string maxResults Max number of items to return in this page. Optional. Defaults to 20.\n  270:      * @opt_param int minPayoutRank A value between 1 and 4, where 1 represents the quartile of publishers with the lowest ranks and 4 represents the quartile of publishers with the highest ranks. Filters out all publishers with a lower rank than the given quartile. For example if a 2 was given only publishers with a payout rank of 25 or higher would be included. Optional.\n  271       * @return Google_Publishers\n  272       */\n\n/Library/WebServer/Documents/beautypost/app/Vendor/Google/src/contrib/Google_OrkutService.php:\n   45      }\n   46      /**\n   47:      * Retrieves the relationship between a user and a community. (communityMembers.get)\n   48       *\n   49       * @param int $communityId ID of the community.\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/colorbox.css:\n    1  /*\n    2      Colorbox Core Style:\n    3:     The following CSS is consistent between example themes and should not be altered.\n    4  */\n    5  #colorbox, #cboxOverlay, #cboxWrapper{position:absolute; top:0; left:0; z-index:9999; overflow:hidden;}\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/fullcalendar.css:\n  420  .fc-grid .fc-day-content {\n  421  	clear: both;\n  422: 	padding: 2px 2px 1px; /* distance between events and day edges */\n  423  	}\n  424  	\n  ...\n  493  	}\n  494  	\n  495: /* divider (between all-day and slots) */\n  496  	\n  497  .fc-agenda-divider-inner {\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/ace-features.less:\n    4  @enable-rtl-file:						false;//Compile &amp; enable RTL style file.<br /> You don't need this if you don't provide support for Arabic, Hebrew, Persian!\n    5  @enable-mobile-width:					991;//Point at which navbar and sidebar become collapsed.<br /><i>Bootstrap's default is <u>767</u> but <u>991</u> is recommended because of many small devices with qHD(960x540) resolution and below. Also most desktop devices are above <u>1024px</u> wide.</i> {\"767\": 767, \"991\": 991}\n    6: @enable-gutter-width:					24px;//Padding between columns. Gets divided in half for the left and right.<br /><i>Bootstrap's default is 30px which has been changed to 24px in Ace!</i>\n    7  @enable-no-responsive:					false;//Disable responsive (small screen) styles by stripping some media queries. <br /> You may also specify <span class=\"text-danger\">min-width: some_value !important</span> for <b>.navbar</b> and <b>.main-container</b> to get better results.\n    8  @enable-container:						true;//Enable Container (like \"inside <b>.container</b>\" settings options)\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/page.profile.less:\n   31  	border-top: 1px dotted #D5E4F1;\n   32  	\n   33: 	> span  + span:before{/* for a list of values (such as location city & country) put a comma between them */\n   34  		display:inline;\n   35  		content:\",\";\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/button-groups.less:\n  105  // ----------------------\n  106  \n  107: // Give the line between buttons some depth\n  108  .btn-group > .btn + .dropdown-toggle {\n  109    padding-left: 8px;\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/input-groups.less:\n  151    }\n  152  \n  153:   // Negative margin to only have a 1px border between the two\n  154    &:first-child {\n  155      > .btn,\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/media.less:\n   14  }\n   15  \n   16: // Proper spacing between instances of .media\n   17  .media,\n   18  .media .media {\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/navs.less:\n  146      + li {\n  147        margin-top: 2px;\n  148:       margin-left: 0; // no need for this gap between nav items\n  149      }\n  150    }\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/normalize.less:\n  204  \n  205  //\n  206: // Address differences between Firefox and other browsers.\n  207  //\n  208  \n  ...\n  282  //    and `video` controls.\n  283  // 2. Correct inability to style clickable `input` types in iOS.\n  284: // 3. Improve usability and consistency of cursor style between image-type\n  285  //    `input` and others.\n  286  //\n  ...\n  412  \n  413  //\n  414: // Remove most spacing between table cells.\n  415  //\n  416  \n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/panels.less:\n   54  //\n   55  // By default, space out list group content from panel headings to account for\n   56: // any kind of custom content between the two.\n   57  \n   58  .panel {\n   ..\n   81    }\n   82  }\n   83: // Collapse space between when there's no additional content.\n   84  .panel-heading + .list-group {\n   85    .list-group-item:first-child {\n   ..\n  199    margin-bottom: @line-height-computed;\n  200  \n  201:   // Tighten up margin so it's only between panels\n  202    .panel {\n  203      margin-bottom: 0;\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/tables.less:\n   78  // Bordered version\n   79  //\n   80: // Add borders all around the table and between all the columns.\n   81  \n   82  .table-bordered {\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/bootstrap/variables.less:\n  216  //** Dropdown menu `border-color` **for IE8**.\n  217  @dropdown-fallback-border:       #ccc;\n  218: //** Divider color for between dropdown items.\n  219  @dropdown-divider-bg:            #e5e5e5;\n  220  \n  ...\n  302  //** Number of columns in the grid.\n  303  @grid-columns:              12;\n  304: //** Padding between columns. Gets divided in half for the left and right.\n  305  @grid-gutter-width:         24px;\n  306  // Navbar collapse\n  ...\n  773  //** Text color of current page in the breadcrumb\n  774  @breadcrumb-active-color:       @gray-light;\n  775: //** Textual separator for between breadcrumb elements\n  776  @breadcrumb-separator:          \"/\";\n  777  \n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/less/skins/skin-1.less:\n  454  	border-color: @hover-submenu-border;\n  455   }\n  456:  //to keep the lines between items\n  457   .nav-list li.hover > .submenu > li > a {\n  458  	border-top-width: 1px;\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/css/uncompressed/ace.css:\n 12118  }\n 12119  .profile-info-value > span + span:before {\n 12120:   /* for a list of values (such as location city & country) put a comma between them */\n 12121    display: inline;\n 12122    content: \",\";\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/additional-methods.min.js:\n    2   * http://jqueryvalidation.org/\n    3   * Copyright (c) 2014 Jörn Zaefferer; Licensed MIT */\n    4: !function(){function a(a){return a.replace(/<.[^<>]*?>/g,\" \").replace(/&nbsp;|&#160;/gi,\" \").replace(/[.(),;:!?%#$'\\\"_+=\\/\\-“”’]*/g,\"\")}jQuery.validator.addMethod(\"maxWords\",function(b,c,d){return this.optional(c)||a(b).match(/\\b\\w+\\b/g).length<=d},jQuery.validator.format(\"Please enter {0} words or less.\")),jQuery.validator.addMethod(\"minWords\",function(b,c,d){return this.optional(c)||a(b).match(/\\b\\w+\\b/g).length>=d},jQuery.validator.format(\"Please enter at least {0} words.\")),jQuery.validator.addMethod(\"rangeWords\",function(b,c,d){var e=a(b),f=/\\b\\w+\\b/g;return this.optional(c)||e.match(f).length>=d[0]&&e.match(f).length<=d[1]},jQuery.validator.format(\"Please enter between {0} and {1} words.\"))}(),jQuery.validator.addMethod(\"accept\",function(a,b,c){var d,e,f=\"string\"==typeof c?c.replace(/\\s/g,\"\").replace(/,/g,\"|\"):\"image/*\",g=this.optional(b);if(g)return g;if(\"file\"===jQuery(b).attr(\"type\")&&(f=f.replace(/\\*/g,\".*\"),b.files&&b.files.length))for(d=0;d<b.files.length;d++)if(e=b.files[d],!e.type.match(new RegExp(\".?(\"+f+\")$\",\"i\")))return!1;return!0},jQuery.validator.format(\"Please enter a value with a valid mimetype.\")),jQuery.validator.addMethod(\"alphanumeric\",function(a,b){return this.optional(b)||/^\\w+$/i.test(a)},\"Letters, numbers, and underscores only please\"),jQuery.validator.addMethod(\"bankaccountNL\",function(a,b){if(this.optional(b))return!0;if(!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(a))return!1;var c,d,e,f=a.replace(/ /g,\"\"),g=0,h=f.length;for(c=0;h>c;c++)d=h-c,e=f.substring(c,c+1),g+=d*e;return g%11===0},\"Please specify a valid bank account number\"),jQuery.validator.addMethod(\"bankorgiroaccountNL\",function(a,b){return this.optional(b)||$.validator.methods.bankaccountNL.call(this,a,b)||$.validator.methods.giroaccountNL.call(this,a,b)},\"Please specify a valid bank or giro account number\"),jQuery.validator.addMethod(\"bic\",function(a,b){return this.optional(b)||/^([A-Z]{6}[A-Z2-9][A-NP-Z1-2])(X{3}|[A-WY-Z0-9][A-Z0-9]{2})?$/.test(a)},\"Please specify a valid BIC code\"),jQuery.validator.addMethod(\"cifES\",function(a){\"use strict\";var b,c,d,e,f,g,h=[];if(a=a.toUpperCase(),!a.match(\"((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)\"))return!1;for(d=0;9>d;d++)h[d]=parseInt(a.charAt(d),10);for(c=h[2]+h[4]+h[6],e=1;8>e;e+=2)f=(2*h[e]).toString(),g=f.charAt(1),c+=parseInt(f.charAt(0),10)+(\"\"===g?0:parseInt(g,10));return/^[ABCDEFGHJNPQRSUVW]{1}/.test(a)?(c+=\"\",b=10-parseInt(c.charAt(c.length-1),10),a+=b,h[8].toString()===String.fromCharCode(64+b)||h[8].toString()===a.charAt(a.length-1)):!1},\"Please specify a valid CIF number.\"),jQuery.validator.addMethod(\"creditcardtypes\",function(a,b,c){if(/[^0-9\\-]+/.test(a))return!1;a=a.replace(/\\D/g,\"\");var d=0;return c.mastercard&&(d|=1),c.visa&&(d|=2),c.amex&&(d|=4),c.dinersclub&&(d|=8),c.enroute&&(d|=16),c.discover&&(d|=32),c.jcb&&(d|=64),c.unknown&&(d|=128),c.all&&(d=255),1&d&&/^(5[12345])/.test(a)?16===a.length:2&d&&/^(4)/.test(a)?16===a.length:4&d&&/^(3[47])/.test(a)?15===a.length:8&d&&/^(3(0[012345]|[68]))/.test(a)?14===a.length:16&d&&/^(2(014|149))/.test(a)?15===a.length:32&d&&/^(6011)/.test(a)?16===a.length:64&d&&/^(3)/.test(a)?16===a.length:64&d&&/^(2131|1800)/.test(a)?15===a.length:128&d?!0:!1},\"Please enter a valid credit card number.\"),jQuery.validator.addMethod(\"currency\",function(a,b,c){var d,e=\"string\"==typeof c,f=e?c:c[0],g=e?!0:c[1];return f=f.replace(/,/g,\"\"),f=g?f+\"]\":f+\"]?\",d=\"^[\"+f+\"([1-9]{1}[0-9]{0,2}(\\\\,[0-9]{3})*(\\\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\\\.[0-9]{0,2})?|0(\\\\.[0-9]{0,2})?|(\\\\.[0-9]{1,2})?)$\",d=new RegExp(d),this.optional(b)||d.test(a)},\"Please specify a valid currency\"),jQuery.validator.addMethod(\"dateITA\",function(a,b){var c,d,e,f,g,h=!1,i=/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;return i.test(a)?(c=a.split(\"/\"),d=parseInt(c[0],10),e=parseInt(c[1],10),f=parseInt(c[2],10),g=new Date(f,e-1,d,12,0,0,0),h=g.getFullYear()===f&&g.getMonth()===e-1&&g.getDate()===d?!0:!1):h=!1,this.optional(b)||h},\"Please enter a correct date\"),jQuery.validator.addMethod(\"dateNL\",function(a,b){return this.optional(b)||/^(0?[1-9]|[12]\\d|3[01])[\\.\\/\\-](0?[1-9]|1[012])[\\.\\/\\-]([12]\\d)?(\\d\\d)$/.test(a)},\"Please enter a correct date\"),jQuery.validator.addMethod(\"extension\",function(a,b,c){return c=\"string\"==typeof c?c.replace(/,/g,\"|\"):\"png|jpe?g|gif\",this.optional(b)||a.match(new RegExp(\".(\"+c+\")$\",\"i\"))},jQuery.validator.format(\"Please enter a value with a valid extension.\")),jQuery.validator.addMethod(\"giroaccountNL\",function(a,b){return this.optional(b)||/^[0-9]{1,7}$/.test(a)},\"Please specify a valid giro account number\"),jQuery.validator.addMethod(\"iban\",function(a,b){if(this.optional(b))return!0;var c,d,e,f,g,h,i,j,k,l=a.replace(/ /g,\"\").toUpperCase(),m=\"\",n=!0,o=\"\",p=\"\";if(!/^([a-zA-Z0-9]{4} ){2,8}[a-zA-Z0-9]{1,4}|[a-zA-Z0-9]{12,34}$/.test(l))return!1;if(c=l.substring(0,2),h={AL:\"\\\\d{8}[\\\\dA-Z]{16}\",AD:\"\\\\d{8}[\\\\dA-Z]{12}\",AT:\"\\\\d{16}\",AZ:\"[\\\\dA-Z]{4}\\\\d{20}\",BE:\"\\\\d{12}\",BH:\"[A-Z]{4}[\\\\dA-Z]{14}\",BA:\"\\\\d{16}\",BR:\"\\\\d{23}[A-Z][\\\\dA-Z]\",BG:\"[A-Z]{4}\\\\d{6}[\\\\dA-Z]{8}\",CR:\"\\\\d{17}\",HR:\"\\\\d{17}\",CY:\"\\\\d{8}[\\\\dA-Z]{16}\",CZ:\"\\\\d{20}\",DK:\"\\\\d{14}\",DO:\"[A-Z]{4}\\\\d{20}\",EE:\"\\\\d{16}\",FO:\"\\\\d{14}\",FI:\"\\\\d{14}\",FR:\"\\\\d{10}[\\\\dA-Z]{11}\\\\d{2}\",GE:\"[\\\\dA-Z]{2}\\\\d{16}\",DE:\"\\\\d{18}\",GI:\"[A-Z]{4}[\\\\dA-Z]{15}\",GR:\"\\\\d{7}[\\\\dA-Z]{16}\",GL:\"\\\\d{14}\",GT:\"[\\\\dA-Z]{4}[\\\\dA-Z]{20}\",HU:\"\\\\d{24}\",IS:\"\\\\d{22}\",IE:\"[\\\\dA-Z]{4}\\\\d{14}\",IL:\"\\\\d{19}\",IT:\"[A-Z]\\\\d{10}[\\\\dA-Z]{12}\",KZ:\"\\\\d{3}[\\\\dA-Z]{13}\",KW:\"[A-Z]{4}[\\\\dA-Z]{22}\",LV:\"[A-Z]{4}[\\\\dA-Z]{13}\",LB:\"\\\\d{4}[\\\\dA-Z]{20}\",LI:\"\\\\d{5}[\\\\dA-Z]{12}\",LT:\"\\\\d{16}\",LU:\"\\\\d{3}[\\\\dA-Z]{13}\",MK:\"\\\\d{3}[\\\\dA-Z]{10}\\\\d{2}\",MT:\"[A-Z]{4}\\\\d{5}[\\\\dA-Z]{18}\",MR:\"\\\\d{23}\",MU:\"[A-Z]{4}\\\\d{19}[A-Z]{3}\",MC:\"\\\\d{10}[\\\\dA-Z]{11}\\\\d{2}\",MD:\"[\\\\dA-Z]{2}\\\\d{18}\",ME:\"\\\\d{18}\",NL:\"[A-Z]{4}\\\\d{10}\",NO:\"\\\\d{11}\",PK:\"[\\\\dA-Z]{4}\\\\d{16}\",PS:\"[\\\\dA-Z]{4}\\\\d{21}\",PL:\"\\\\d{24}\",PT:\"\\\\d{21}\",RO:\"[A-Z]{4}[\\\\dA-Z]{16}\",SM:\"[A-Z]\\\\d{10}[\\\\dA-Z]{12}\",SA:\"\\\\d{2}[\\\\dA-Z]{18}\",RS:\"\\\\d{18}\",SK:\"\\\\d{20}\",SI:\"\\\\d{15}\",ES:\"\\\\d{20}\",SE:\"\\\\d{20}\",CH:\"\\\\d{5}[\\\\dA-Z]{12}\",TN:\"\\\\d{20}\",TR:\"\\\\d{5}[\\\\dA-Z]{17}\",AE:\"\\\\d{3}\\\\d{16}\",GB:\"[A-Z]{4}\\\\d{14}\",VG:\"[\\\\dA-Z]{4}\\\\d{16}\"},g=h[c],\"undefined\"!=typeof g&&(i=new RegExp(\"^[A-Z]{2}\\\\d{2}\"+g+\"$\",\"\"),!i.test(l)))return!1;for(d=l.substring(4,l.length)+l.substring(0,4),j=0;j<d.length;j++)e=d.charAt(j),\"0\"!==e&&(n=!1),n||(m+=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(e));for(k=0;k<m.length;k++)f=m.charAt(k),p=\"\"+o+f,o=p%97;return 1===o},\"Please specify a valid IBAN\"),jQuery.validator.addMethod(\"integer\",function(a,b){return this.optional(b)||/^-?\\d+$/.test(a)},\"A positive or negative non-decimal number please\"),jQuery.validator.addMethod(\"ipv4\",function(a,b){return this.optional(b)||/^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/i.test(a)},\"Please enter a valid IP v4 address.\"),jQuery.validator.addMethod(\"ipv6\",function(a,b){return this.optional(b)||/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(a)},\"Please enter a valid IP v6 address.\"),jQuery.validator.addMethod(\"lettersonly\",function(a,b){return this.optional(b)||/^[a-z]+$/i.test(a)},\"Letters only please\"),jQuery.validator.addMethod(\"letterswithbasicpunc\",function(a,b){return this.optional(b)||/^[a-z\\-.,()'\"\\s]+$/i.test(a)},\"Letters or punctuation only please\"),jQuery.validator.addMethod(\"mobileNL\",function(a,b){return this.optional(b)||/^((\\+|00(\\s|\\s?\\-\\s?)?)31(\\s|\\s?\\-\\s?)?(\\(0\\)[\\-\\s]?)?|0)6((\\s|\\s?\\-\\s?)?[0-9]){8}$/.test(a)},\"Please specify a valid mobile number\"),jQuery.validator.addMethod(\"mobileUK\",function(a,b){return a=a.replace(/\\(|\\)|\\s+|-/g,\"\"),this.optional(b)||a.length>9&&a.match(/^(?:(?:(?:00\\s?|\\+)44\\s?|0)7(?:[1345789]\\d{2}|624)\\s?\\d{3}\\s?\\d{3})$/)},\"Please specify a valid mobile number\"),jQuery.validator.addMethod(\"nieES\",function(a){\"use strict\";return a=a.toUpperCase(),a.match(\"((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)\")?/^[T]{1}/.test(a)?a[8]===/^[T]{1}[A-Z0-9]{8}$/.test(a):/^[XYZ]{1}/.test(a)?a[8]===\"TRWAGMYFPDXBNJZSQVHLCKE\".charAt(a.replace(\"X\",\"0\").replace(\"Y\",\"1\").replace(\"Z\",\"2\").substring(0,8)%23):!1:!1},\"Please specify a valid NIE number.\"),jQuery.validator.addMethod(\"nifES\",function(a){\"use strict\";return a=a.toUpperCase(),a.match(\"((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)\")?/^[0-9]{8}[A-Z]{1}$/.test(a)?\"TRWAGMYFPDXBNJZSQVHLCKE\".charAt(a.substring(8,0)%23)===a.charAt(8):/^[KLM]{1}/.test(a)?a[8]===String.fromCharCode(64):!1:!1},\"Please specify a valid NIF number.\"),jQuery.validator.addMethod(\"nowhitespace\",function(a,b){return this.optional(b)||/^\\S+$/i.test(a)},\"No white space please\"),jQuery.validator.addMethod(\"pattern\",function(a,b,c){return this.optional(b)?!0:(\"string\"==typeof c&&(c=new RegExp(c)),c.test(a))},\"Invalid format.\"),jQuery.validator.addMethod(\"phoneNL\",function(a,b){return this.optional(b)||/^((\\+|00(\\s|\\s?\\-\\s?)?)31(\\s|\\s?\\-\\s?)?(\\(0\\)[\\-\\s]?)?|0)[1-9]((\\s|\\s?\\-\\s?)?[0-9]){8}$/.test(a)},\"Please specify a valid phone number.\"),jQuery.validator.addMethod(\"phoneUK\",function(a,b){return a=a.replace(/\\(|\\)|\\s+|-/g,\"\"),this.optional(b)||a.length>9&&a.match(/^(?:(?:(?:00\\s?|\\+)44\\s?)|(?:\\(?0))(?:\\d{2}\\)?\\s?\\d{4}\\s?\\d{4}|\\d{3}\\)?\\s?\\d{3}\\s?\\d{3,4}|\\d{4}\\)?\\s?(?:\\d{5}|\\d{3}\\s?\\d{3})|\\d{5}\\)?\\s?\\d{4,5})$/)},\"Please specify a valid phone number\"),jQuery.validator.addMethod(\"phoneUS\",function(a,b){return a=a.replace(/\\s+/g,\"\"),this.optional(b)||a.length>9&&a.match(/^(\\+?1-?)?(\\([2-9]([02-9]\\d|1[02-9])\\)|[2-9]([02-9]\\d|1[02-9]))-?[2-9]([02-9]\\d|1[02-9])-?\\d{4}$/)},\"Please specify a valid phone number\"),jQuery.validator.addMethod(\"phonesUK\",function(a,b){return a=a.replace(/\\(|\\)|\\s+|-/g,\"\"),this.optional(b)||a.length>9&&a.match(/^(?:(?:(?:00\\s?|\\+)44\\s?|0)(?:1\\d{8,9}|[23]\\d{9}|7(?:[1345789]\\d{8}|624\\d{6})))$/)},\"Please specify a valid uk phone number\"),jQuery.validator.addMethod(\"postalcodeNL\",function(a,b){return this.optional(b)||/^[1-9][0-9]{3}\\s?[a-zA-Z]{2}$/.test(a)},\"Please specify a valid postal code\"),jQuery.validator.addMethod(\"postcodeUK\",function(a,b){return this.optional(b)||/^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\\s?(0AA))$/i.test(a)},\"Please specify a valid UK postcode\"),jQuery.validator.addMethod(\"require_from_group\",function(a,b,c){var d=$(c[1],b.form),e=d.eq(0),f=e.data(\"valid_req_grp\")?e.data(\"valid_req_grp\"):$.extend({},this),g=d.filter(function(){return f.elementValue(this)}).length>=c[0];return e.data(\"valid_req_grp\",f),$(b).data(\"being_validated\")||(d.data(\"being_validated\",!0),d.each(function(){f.element(this)}),d.data(\"being_validated\",!1)),g},jQuery.validator.format(\"Please fill at least {0} of these fields.\")),jQuery.validator.addMethod(\"skip_or_fill_minimum\",function(a,b,c){var d=$(c[1],b.form),e=d.eq(0),f=e.data(\"valid_skip\")?e.data(\"valid_skip\"):$.extend({},this),g=d.filter(function(){return f.elementValue(this)}).length,h=0===g||g>=c[0];return e.data(\"valid_skip\",f),$(b).data(\"being_validated\")||(d.data(\"being_validated\",!0),d.each(function(){f.element(this)}),d.data(\"being_validated\",!1)),h},jQuery.validator.format(\"Please either skip these fields or fill at least {0} of them.\")),jQuery.validator.addMethod(\"strippedminlength\",function(a,b,c){return jQuery(a).text().length>=c},jQuery.validator.format(\"Please enter at least {0} characters\")),jQuery.validator.addMethod(\"time\",function(a,b){return this.optional(b)||/^([01]\\d|2[0-3])(:[0-5]\\d){1,2}$/.test(a)},\"Please enter a valid time, between 00:00 and 23:59\"),jQuery.validator.addMethod(\"time12h\",function(a,b){return this.optional(b)||/^((0?[1-9]|1[012])(:[0-5]\\d){1,2}(\\ ?[AP]M))$/i.test(a)},\"Please enter a valid time in 12-hour am/pm format\"),jQuery.validator.addMethod(\"url2\",function(a,b){return this.optional(b)||/^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(a)},jQuery.validator.messages.url),jQuery.validator.addMethod(\"vinUS\",function(a){if(17!==a.length)return!1;var b,c,d,e,f,g,h=[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\",\"M\",\"N\",\"P\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"],i=[1,2,3,4,5,6,7,8,1,2,3,4,5,7,9,2,3,4,5,6,7,8,9],j=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2],k=0;for(b=0;17>b;b++){if(e=j[b],d=a.slice(b,b+1),8===b&&(g=d),isNaN(d)){for(c=0;c<h.length;c++)if(d.toUpperCase()===h[c]){d=i[c],d*=e,isNaN(g)&&8===c&&(g=h[c]);break}}else d*=e;k+=d}return f=k%11,10===f&&(f=\"X\"),f===g?!0:!1},\"The specified vehicle identification number (VIN) is invalid.\"),jQuery.validator.addMethod(\"zipcodeUS\",function(a,b){return this.optional(b)||/^\\d{5}-\\d{4}$|^\\d{5}$/.test(a)},\"The specified US ZIP Code is invalid\"),jQuery.validator.addMethod(\"ziprange\",function(a,b){return this.optional(b)||/^90[2-5]\\d\\{2\\}-\\d{4}$/.test(a)},\"Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx\");\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/jquery.validate.min.js:\n    2   * http://jqueryvalidation.org/\n    3   * Copyright (c) 2014 Jörn Zaefferer; Licensed MIT */\n    4: !function(a){a.extend(a.fn,{validate:function(b){if(!this.length)return void(b&&b.debug&&window.console&&console.warn(\"Nothing selected, can't validate, returning nothing.\"));var c=a.data(this[0],\"validator\");return c?c:(this.attr(\"novalidate\",\"novalidate\"),c=new a.validator(b,this[0]),a.data(this[0],\"validator\",c),c.settings.onsubmit&&(this.validateDelegate(\":submit\",\"click\",function(b){c.settings.submitHandler&&(c.submitButton=b.target),a(b.target).hasClass(\"cancel\")&&(c.cancelSubmit=!0),void 0!==a(b.target).attr(\"formnovalidate\")&&(c.cancelSubmit=!0)}),this.submit(function(b){function d(){var d;return c.settings.submitHandler?(c.submitButton&&(d=a(\"<input type='hidden'/>\").attr(\"name\",c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)),c.settings.submitHandler.call(c,c.currentForm,b),c.submitButton&&d.remove(),!1):!0}return c.settings.debug&&b.preventDefault(),c.cancelSubmit?(c.cancelSubmit=!1,d()):c.form()?c.pendingRequest?(c.formSubmitted=!0,!1):d():(c.focusInvalid(),!1)})),c)},valid:function(){var b,c;return a(this[0]).is(\"form\")?b=this.validate().form():(b=!0,c=a(this[0].form).validate(),this.each(function(){b=c.element(this)&&b})),b},removeAttrs:function(b){var c={},d=this;return a.each(b.split(/\\s/),function(a,b){c[b]=d.attr(b),d.removeAttr(b)}),c},rules:function(b,c){var d,e,f,g,h,i,j=this[0];if(b)switch(d=a.data(j.form,\"validator\").settings,e=d.rules,f=a.validator.staticRules(j),b){case\"add\":a.extend(f,a.validator.normalizeRule(c)),delete f.messages,e[j.name]=f,c.messages&&(d.messages[j.name]=a.extend(d.messages[j.name],c.messages));break;case\"remove\":return c?(i={},a.each(c.split(/\\s/),function(b,c){i[c]=f[c],delete f[c],\"required\"===c&&a(j).removeAttr(\"aria-required\")}),i):(delete e[j.name],f)}return g=a.validator.normalizeRules(a.extend({},a.validator.classRules(j),a.validator.attributeRules(j),a.validator.dataRules(j),a.validator.staticRules(j)),j),g.required&&(h=g.required,delete g.required,g=a.extend({required:h},g),a(j).attr(\"aria-required\",\"true\")),g.remote&&(h=g.remote,delete g.remote,g=a.extend(g,{remote:h})),g}}),a.extend(a.expr[\":\"],{blank:function(b){return!a.trim(\"\"+a(b).val())},filled:function(b){return!!a.trim(\"\"+a(b).val())},unchecked:function(b){return!a(b).prop(\"checked\")}}),a.validator=function(b,c){this.settings=a.extend(!0,{},a.validator.defaults,b),this.currentForm=c,this.init()},a.validator.format=function(b,c){return 1===arguments.length?function(){var c=a.makeArray(arguments);return c.unshift(b),a.validator.format.apply(this,c)}:(arguments.length>2&&c.constructor!==Array&&(c=a.makeArray(arguments).slice(1)),c.constructor!==Array&&(c=[c]),a.each(c,function(a,c){b=b.replace(new RegExp(\"\\\\{\"+a+\"\\\\}\",\"g\"),function(){return c})}),b)},a.extend(a.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:\"error\",validClass:\"valid\",errorElement:\"label\",focusInvalid:!0,errorContainer:a([]),errorLabelContainer:a([]),onsubmit:!0,ignore:\":hidden\",ignoreTitle:!1,onfocusin:function(a){this.lastActive=a,this.settings.focusCleanup&&!this.blockFocusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,a,this.settings.errorClass,this.settings.validClass),this.addWrapper(this.errorsFor(a)).hide())},onfocusout:function(a){this.checkable(a)||!(a.name in this.submitted)&&this.optional(a)||this.element(a)},onkeyup:function(a,b){(9!==b.which||\"\"!==this.elementValue(a))&&(a.name in this.submitted||a===this.lastElement)&&this.element(a)},onclick:function(a){a.name in this.submitted?this.element(a):a.parentNode.name in this.submitted&&this.element(a.parentNode)},highlight:function(b,c,d){\"radio\"===b.type?this.findByName(b.name).addClass(c).removeClass(d):a(b).addClass(c).removeClass(d)},unhighlight:function(b,c,d){\"radio\"===b.type?this.findByName(b.name).removeClass(c).addClass(d):a(b).removeClass(c).addClass(d)}},setDefaults:function(b){a.extend(a.validator.defaults,b)},messages:{required:\"This field is required.\",remote:\"Please fix this field.\",email:\"Please enter a valid email address.\",url:\"Please enter a valid URL.\",date:\"Please enter a valid date.\",dateISO:\"Please enter a valid date (ISO).\",number:\"Please enter a valid number.\",digits:\"Please enter only digits.\",creditcard:\"Please enter a valid credit card number.\",equalTo:\"Please enter the same value again.\",maxlength:a.validator.format(\"Please enter no more than {0} characters.\"),minlength:a.validator.format(\"Please enter at least {0} characters.\"),rangelength:a.validator.format(\"Please enter a value between {0} and {1} characters long.\"),range:a.validator.format(\"Please enter a value between {0} and {1}.\"),max:a.validator.format(\"Please enter a value less than or equal to {0}.\"),min:a.validator.format(\"Please enter a value greater than or equal to {0}.\")},autoCreateRanges:!1,prototype:{init:function(){function b(b){var c=a.data(this[0].form,\"validator\"),d=\"on\"+b.type.replace(/^validate/,\"\"),e=c.settings;e[d]&&!this.is(e.ignore)&&e[d].call(c,this[0],b)}this.labelContainer=a(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||a(this.currentForm),this.containers=a(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var c,d=this.groups={};a.each(this.settings.groups,function(b,c){\"string\"==typeof c&&(c=c.split(/\\s/)),a.each(c,function(a,c){d[c]=b})}),c=this.settings.rules,a.each(c,function(b,d){c[b]=a.validator.normalizeRule(d)}),a(this.currentForm).validateDelegate(\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] \",\"focusin focusout keyup\",b).validateDelegate(\"[type='radio'], [type='checkbox'], select, option\",\"click\",b),this.settings.invalidHandler&&a(this.currentForm).bind(\"invalid-form.validate\",this.settings.invalidHandler),a(this.currentForm).find(\"[required], [data-rule-required], .required\").attr(\"aria-required\",\"true\")},form:function(){return this.checkForm(),a.extend(this.submitted,this.errorMap),this.invalid=a.extend({},this.errorMap),this.valid()||a(this.currentForm).triggerHandler(\"invalid-form\",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var a=0,b=this.currentElements=this.elements();b[a];a++)this.check(b[a]);return this.valid()},element:function(b){var c=this.clean(b),d=this.validationTargetFor(c),e=!0;return this.lastElement=d,void 0===d?delete this.invalid[c.name]:(this.prepareElement(d),this.currentElements=a(d),e=this.check(d)!==!1,e?delete this.invalid[d.name]:this.invalid[d.name]=!0),a(b).attr(\"aria-invalid\",!e),this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),e},showErrors:function(b){if(b){a.extend(this.errorMap,b),this.errorList=[];for(var c in b)this.errorList.push({message:b[c],element:this.findByName(c)[0]});this.successList=a.grep(this.successList,function(a){return!(a.name in b)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){a.fn.resetForm&&a(this.currentForm).resetForm(),this.submitted={},this.lastElement=null,this.prepareForm(),this.hideErrors(),this.elements().removeClass(this.settings.errorClass).removeData(\"previousValue\").removeAttr(\"aria-invalid\")},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(a){var b,c=0;for(b in a)c++;return c},hideErrors:function(){this.addWrapper(this.toHide).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{a(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(\":visible\").focus().trigger(\"focusin\")}catch(b){}},findLastActive:function(){var b=this.lastActive;return b&&1===a.grep(this.errorList,function(a){return a.element.name===b.name}).length&&b},elements:function(){var b=this,c={};return a(this.currentForm).find(\"input, select, textarea\").not(\":submit, :reset, :image, [disabled]\").not(this.settings.ignore).filter(function(){return!this.name&&b.settings.debug&&window.console&&console.error(\"%o has no name assigned\",this),this.name in c||!b.objectLength(a(this).rules())?!1:(c[this.name]=!0,!0)})},clean:function(b){return a(b)[0]},errors:function(){var b=this.settings.errorClass.split(\" \").join(\".\");return a(this.settings.errorElement+\".\"+b,this.errorContext)},reset:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=a([]),this.toHide=a([]),this.currentElements=a([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(a){this.reset(),this.toHide=this.errorsFor(a)},elementValue:function(b){var c,d=a(b),e=d.attr(\"type\");return\"radio\"===e||\"checkbox\"===e?a(\"input[name='\"+d.attr(\"name\")+\"']:checked\").val():(c=d.val(),\"string\"==typeof c?c.replace(/\\r/g,\"\"):c)},check:function(b){b=this.validationTargetFor(this.clean(b));var c,d,e,f=a(b).rules(),g=a.map(f,function(a,b){return b}).length,h=!1,i=this.elementValue(b);for(d in f){e={method:d,parameters:f[d]};try{if(c=a.validator.methods[d].call(this,i,b,e.parameters),\"dependency-mismatch\"===c&&1===g){h=!0;continue}if(h=!1,\"pending\"===c)return void(this.toHide=this.toHide.not(this.errorsFor(b)));if(!c)return this.formatAndAdd(b,e),!1}catch(j){throw this.settings.debug&&window.console&&console.log(\"Exception occurred when checking element \"+b.id+\", check the '\"+e.method+\"' method.\",j),j}}if(!h)return this.objectLength(f)&&this.successList.push(b),!0},customDataMessage:function(b,c){return a(b).data(\"msg\"+c[0].toUpperCase()+c.substring(1).toLowerCase())||a(b).data(\"msg\")},customMessage:function(a,b){var c=this.settings.messages[a];return c&&(c.constructor===String?c:c[b])},findDefined:function(){for(var a=0;a<arguments.length;a++)if(void 0!==arguments[a])return arguments[a];return void 0},defaultMessage:function(b,c){return this.findDefined(this.customMessage(b.name,c),this.customDataMessage(b,c),!this.settings.ignoreTitle&&b.title||void 0,a.validator.messages[c],\"<strong>Warning: No message defined for \"+b.name+\"</strong>\")},formatAndAdd:function(b,c){var d=this.defaultMessage(b,c.method),e=/\\$?\\{(\\d+)\\}/g;\"function\"==typeof d?d=d.call(this,c.parameters,b):e.test(d)&&(d=a.validator.format(d.replace(e,\"{$1}\"),c.parameters)),this.errorList.push({message:d,element:b,method:c.method}),this.errorMap[b.name]=d,this.submitted[b.name]=d},addWrapper:function(a){return this.settings.wrapper&&(a=a.add(a.parent(this.settings.wrapper))),a},defaultShowErrors:function(){var a,b,c;for(a=0;this.errorList[a];a++)c=this.errorList[a],this.settings.highlight&&this.settings.highlight.call(this,c.element,this.settings.errorClass,this.settings.validClass),this.showLabel(c.element,c.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(a=0;this.successList[a];a++)this.showLabel(this.successList[a]);if(this.settings.unhighlight)for(a=0,b=this.validElements();b[a];a++)this.settings.unhighlight.call(this,b[a],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return a(this.errorList).map(function(){return this.element})},showLabel:function(b,c){var d=this.errorsFor(b);d.length?(d.removeClass(this.settings.validClass).addClass(this.settings.errorClass),d.html(c)):(d=a(\"<\"+this.settings.errorElement+\">\").attr(\"for\",this.idOrName(b)).addClass(this.settings.errorClass).html(c||\"\"),this.settings.wrapper&&(d=d.hide().show().wrap(\"<\"+this.settings.wrapper+\"/>\").parent()),this.labelContainer.append(d).length||(this.settings.errorPlacement?this.settings.errorPlacement(d,a(b)):d.insertAfter(b))),!c&&this.settings.success&&(d.text(\"\"),\"string\"==typeof this.settings.success?d.addClass(this.settings.success):this.settings.success(d,b)),this.toShow=this.toShow.add(d)},errorsFor:function(b){var c=this.idOrName(b);return this.errors().filter(function(){return a(this).attr(\"for\")===c})},idOrName:function(a){return this.groups[a.name]||(this.checkable(a)?a.name:a.id||a.name)},validationTargetFor:function(a){return this.checkable(a)&&(a=this.findByName(a.name).not(this.settings.ignore)[0]),a},checkable:function(a){return/radio|checkbox/i.test(a.type)},findByName:function(b){return a(this.currentForm).find(\"[name='\"+b+\"']\")},getLength:function(b,c){switch(c.nodeName.toLowerCase()){case\"select\":return a(\"option:selected\",c).length;case\"input\":if(this.checkable(c))return this.findByName(c.name).filter(\":checked\").length}return b.length},depend:function(a,b){return this.dependTypes[typeof a]?this.dependTypes[typeof a](a,b):!0},dependTypes:{\"boolean\":function(a){return a},string:function(b,c){return!!a(b,c.form).length},\"function\":function(a,b){return a(b)}},optional:function(b){var c=this.elementValue(b);return!a.validator.methods.required.call(this,c,b)&&\"dependency-mismatch\"},startRequest:function(a){this.pending[a.name]||(this.pendingRequest++,this.pending[a.name]=!0)},stopRequest:function(b,c){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[b.name],c&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(a(this.currentForm).submit(),this.formSubmitted=!1):!c&&0===this.pendingRequest&&this.formSubmitted&&(a(this.currentForm).triggerHandler(\"invalid-form\",[this]),this.formSubmitted=!1)},previousValue:function(b){return a.data(b,\"previousValue\")||a.data(b,\"previousValue\",{old:null,valid:!0,message:this.defaultMessage(b,\"remote\")})}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(b,c){b.constructor===String?this.classRuleSettings[b]=c:a.extend(this.classRuleSettings,b)},classRules:function(b){var c={},d=a(b).attr(\"class\");return d&&a.each(d.split(\" \"),function(){this in a.validator.classRuleSettings&&a.extend(c,a.validator.classRuleSettings[this])}),c},attributeRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute(\"type\");for(c in a.validator.methods)\"required\"===c?(d=b.getAttribute(c),\"\"===d&&(d=!0),d=!!d):d=f.attr(c),/min|max/.test(c)&&(null===g||/number|range|text/.test(g))&&(d=Number(d)),d||0===d?e[c]=d:g===c&&\"range\"!==g&&(e[c]=!0);return e.maxlength&&/-1|2147483647|524288/.test(e.maxlength)&&delete e.maxlength,e},dataRules:function(b){var c,d,e={},f=a(b);for(c in a.validator.methods)d=f.data(\"rule\"+c[0].toUpperCase()+c.substring(1).toLowerCase()),void 0!==d&&(e[c]=d);return e},staticRules:function(b){var c={},d=a.data(b.form,\"validator\");return d.settings.rules&&(c=a.validator.normalizeRule(d.settings.rules[b.name])||{}),c},normalizeRules:function(b,c){return a.each(b,function(d,e){if(e===!1)return void delete b[d];if(e.param||e.depends){var f=!0;switch(typeof e.depends){case\"string\":f=!!a(e.depends,c.form).length;break;case\"function\":f=e.depends.call(c,c)}f?b[d]=void 0!==e.param?e.param:!0:delete b[d]}}),a.each(b,function(d,e){b[d]=a.isFunction(e)?e(c):e}),a.each([\"minlength\",\"maxlength\"],function(){b[this]&&(b[this]=Number(b[this]))}),a.each([\"rangelength\",\"range\"],function(){var c;b[this]&&(a.isArray(b[this])?b[this]=[Number(b[this][0]),Number(b[this][1])]:\"string\"==typeof b[this]&&(c=b[this].split(/[\\s,]+/),b[this]=[Number(c[0]),Number(c[1])]))}),a.validator.autoCreateRanges&&(b.min&&b.max&&(b.range=[b.min,b.max],delete b.min,delete b.max),b.minlength&&b.maxlength&&(b.rangelength=[b.minlength,b.maxlength],delete b.minlength,delete b.maxlength)),b},normalizeRule:function(b){if(\"string\"==typeof b){var c={};a.each(b.split(/\\s/),function(){c[this]=!0}),b=c}return b},addMethod:function(b,c,d){a.validator.methods[b]=c,a.validator.messages[b]=void 0!==d?d:a.validator.messages[b],c.length<3&&a.validator.addClassRules(b,a.validator.normalizeRule(b))},methods:{required:function(b,c,d){if(!this.depend(d,c))return\"dependency-mismatch\";if(\"select\"===c.nodeName.toLowerCase()){var e=a(c).val();return e&&e.length>0}return this.checkable(c)?this.getLength(b,c)>0:a.trim(b).length>0},email:function(a,b){return this.optional(b)||/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)},url:function(a,b){return this.optional(b)||/^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(a)},date:function(a,b){return this.optional(b)||!/Invalid|NaN/.test(new Date(a).toString())},dateISO:function(a,b){return this.optional(b)||/^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/.test(a)},number:function(a,b){return this.optional(b)||/^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(a)},digits:function(a,b){return this.optional(b)||/^\\d+$/.test(a)},creditcard:function(a,b){if(this.optional(b))return\"dependency-mismatch\";if(/[^0-9 \\-]+/.test(a))return!1;var c,d,e=0,f=0,g=!1;if(a=a.replace(/\\D/g,\"\"),a.length<13||a.length>19)return!1;for(c=a.length-1;c>=0;c--)d=a.charAt(c),f=parseInt(d,10),g&&(f*=2)>9&&(f-=9),e+=f,g=!g;return e%10===0},minlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(a.trim(b),c);return this.optional(c)||e>=d},maxlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(a.trim(b),c);return this.optional(c)||d>=e},rangelength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(a.trim(b),c);return this.optional(c)||e>=d[0]&&e<=d[1]},min:function(a,b,c){return this.optional(b)||a>=c},max:function(a,b,c){return this.optional(b)||c>=a},range:function(a,b,c){return this.optional(b)||a>=c[0]&&a<=c[1]},equalTo:function(b,c,d){var e=a(d);return this.settings.onfocusout&&e.unbind(\".validate-equalTo\").bind(\"blur.validate-equalTo\",function(){a(c).valid()}),b===e.val()},remote:function(b,c,d){if(this.optional(c))return\"dependency-mismatch\";var e,f,g=this.previousValue(c);return this.settings.messages[c.name]||(this.settings.messages[c.name]={}),g.originalMessage=this.settings.messages[c.name].remote,this.settings.messages[c.name].remote=g.message,d=\"string\"==typeof d&&{url:d}||d,g.old===b?g.valid:(g.old=b,e=this,this.startRequest(c),f={},f[c.name]=b,a.ajax(a.extend(!0,{url:d,mode:\"abort\",port:\"validate\"+c.name,dataType:\"json\",data:f,context:e.currentForm,success:function(d){var f,h,i,j=d===!0||\"true\"===d;e.settings.messages[c.name].remote=g.originalMessage,j?(i=e.formSubmitted,e.prepareElement(c),e.formSubmitted=i,e.successList.push(c),delete e.invalid[c.name],e.showErrors()):(f={},h=d||e.defaultMessage(c,\"remote\"),f[c.name]=g.message=a.isFunction(h)?h(b):h,e.invalid[c.name]=!0,e.showErrors(f)),g.valid=j,e.stopRequest(c,j)}},d)),\"pending\")}}}),a.format=function(){throw\"$.format has been deprecated. Please use $.validator.format instead.\"}}(jQuery),function(a){var b,c={};a.ajaxPrefilter?a.ajaxPrefilter(function(a,b,d){var e=a.port;\"abort\"===a.mode&&(c[e]&&c[e].abort(),c[e]=d)}):(b=a.ajax,a.ajax=function(d){var e=(\"mode\"in d?d:a.ajaxSettings).mode,f=(\"port\"in d?d:a.ajaxSettings).port;return\"abort\"===e?(c[f]&&c[f].abort(),c[f]=b.apply(this,arguments),c[f]):b.apply(this,arguments)})}(jQuery),function(a){a.extend(a.fn,{validateDelegate:function(b,c,d){return this.bind(c,function(c){var e=a(c.target);return e.is(b)?d.apply(e,arguments):void 0})}})}(jQuery);\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/prettify.js:\n  226     *\n  227     * <p>The link above does not accurately describe EcmaScript rules since\n  228:    * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works\n  229     * very well in practice.\n  230     *\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/additional-methods.js:\n   28  			regex = /\\b\\w+\\b/g;\n   29  		return this.optional(element) || valueStripped.match(regex).length >= params[0] && valueStripped.match(regex).length <= params[1];\n   30: 	}, jQuery.validator.format(\"Please enter between {0} and {1} words.\"));\n   31  \n   32  }());\n   ..\n  759  jQuery.validator.addMethod(\"time\", function(value, element) {\n  760  	return this.optional(element) || /^([01]\\d|2[0-3])(:[0-5]\\d){1,2}$/.test(value);\n  761: }, \"Please enter a valid time, between 00:00 and 23:59\");\n  762  \n  763  jQuery.validator.addMethod(\"time12h\", function(value, element) {\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/excanvas.js:\n  541      }\n  542  \n  543:     // Different scaling between normal text and VML text. This was found using\n  544      // trial and error to get the same size as non VML text.\n  545      computedStyle.size *= 0.981;\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/fullcalendar.js:\n 2724  \n 2725  	// Start at the leftmost side of the formatting string and continue until you hit a token\n 2726: 	// that is not the same between dates.\n 2727  	for (leftI=0; leftI<chunks.length; leftI++) {\n 2728  		chunkStr = formatSimilarChunk(date1, date2, chunks[leftI]);\n ....\n 2767  	D: 'day', // day of month\n 2768  	d: 'day', // day of week\n 2769: 	// prevents a separator between anything time-related...\n 2770  	A: 'second', // AM/PM\n 2771  	a: 'second', // am/pm\n ....\n 5108  \n 5109  				// NOTE: this `cell` value is only useful for determining in-bounds and all-day.\n 5110: 				// Bad for anything else due to the discrepancy between the mouse position and the\n 5111  				// element position while snapping. (problem revealed in PR #55)\n 5112  				//\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery-ui.custom.js:\n 4583  			//\n 4584  			// Without this, moving items in \"sub-sortables\" can cause\n 4585: 			// the placeholder to jitter between the outer and inner container.\n 4586  			if (item.instance !== this.currentContainer) {\n 4587  				continue;\n ....\n 6006  	},\n 6007  \n 6008: 	// returns the step-aligned value that val is closest to, between (inclusive) min and max\n 6009  	_trimAlignValue: function( val ) {\n 6010  		if ( val <= this._valueMin() ) {\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery-ui.js:\n 4583  			//\n 4584  			// Without this, moving items in \"sub-sortables\" can cause\n 4585: 			// the placeholder to jitter between the outer and inner container.\n 4586  			if (item.instance !== this.currentContainer) {\n 4587  				continue;\n ....\n 7463  				})\n 7464  				// see #8559, we bind to blur here in case the button element loses\n 7465: 				// focus between keydown and keyup, it would be left in an \"active\" state\n 7466  				.bind( \"keyup\" + this.eventNamespace + \" blur\" + this.eventNamespace, function() {\n 7467  					$( this ).removeClass( \"ui-state-active\" );\n ....\n 11782  	},\n 11783  \n 11784: 	// returns the step-aligned value that val is closest to, between (inclusive) min and max\n 11785  	_trimAlignValue: function( val ) {\n 11786  		if ( val <= this._valueMin() ) {\n .....\n 14641  				// http://bugs.jquery.com/ticket/9917\n 14642  				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.\n 14643: 				// We can't differentiate between \"\" and 0 here, so we just assume\n 14644  				// empty string since it's likely to be a more common value...\n 14645  				if ( val === undefined ) {\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.dataTables.js:\n 1194  							}\n 1195  	\n 1196: 							// If a string is given in between the array notation indicators, that\n 1197  							// is used to join the strings together, otherwise an array is returned\n 1198  							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n ....\n 11507  		 *    * `[]` - Array notation. DataTables can automatically combine data\n 11508  		 *      from and array source, joining the data with the characters provided\n 11509: 		 *      between the two brackets. For example: `name[, ]` would provide a\n 11510  		 *      comma-space separated list from the source array. If no characters\n 11511: 		 *      are provided between the brackets, the original array source is\n 11512  		 *      returned.\n 11513  		 *    * `()` - Function notation. Adding `()` to the end of a parameter will\n .....\n 11683  		 *    * `[]` - Array notation. DataTables can automatically combine data\n 11684  		 *      from and array source, joining the data with the characters provided\n 11685: 		 *      between the two brackets. For example: `name[, ]` would provide a\n 11686  		 *      comma-space separated list from the source array. If no characters\n 11687: 		 *      are provided between the brackets, the original array source is\n 11688  		 *      returned.\n 11689  		 *    * `()` - Function notation. Adding `()` to the end of a parameter will\n .....\n 13146  		 * Please note that you should not need to use the internal methods for\n 13147  		 * anything other than a plug-in (and even then, try to avoid if possible).\n 13148: 		 * The internal function may change between releases.\n 13149  		 *\n 13150  		 *  @type object\n .....\n 14094  	 * these methods are references to internal functions and are considered to be\n 14095  	 * private. If you use these methods, be aware that they are liable to change\n 14096: 	 * between versions.\n 14097  	 *  @namespace\n 14098  	 */\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.easypiechart.js:\n   56  	var radius = (options.size - options.lineWidth) / 2;\n   57  	if (options.scaleColor && options.scaleLength) {\n   58: 		radius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n   59  	}\n   60  \n   ..\n   68  	 * @param {strong} color     Valid CSS color string\n   69  	 * @param {number} lineWidth Width of the line in px\n   70: 	 * @param {number} percent   Percentage to draw (float between -1 and 1)\n   71  	 */\n   72  	var drawCircle = function(color, lineWidth, percent) {\n   ..\n  152  	/**\n  153  	 * Draw the complete chart\n  154: 	 * @param {number} percent Percent shown by the chart between -100 and 100\n  155  	 */\n  156  	this.draw = function(percent) {\n  ...\n  313  	/**\n  314  	 * Update the value of the chart\n  315: 	 * @param  {number} newValue Number between 0 and 100\n  316  	 * @return {object}          Instance of the plugin for method chaining\n  317  	 */\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.inputlimiter.1.3.1.js:\n   60  				$('#' + opts.boxId).html(remText + ' ' + limitText);\n   61  				// Check to see if the text is wrapping in the box\n   62: 				// If it is lets break it between the remaining test and the limit test\n   63  				var textWidth = $(\"<span/>\").appendTo(\"body\").attr({id: '19cc9195583bfae1fad88e19d443be7a', 'class': opts.boxClass}).html(remText + ' ' + limitText).innerWidth();\n   64  				$(\"#19cc9195583bfae1fad88e19d443be7a\").remove();\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.js:\n 7647  \n 7648  /* Handles responses to an ajax request:\n 7649:  * - finds the right dataType (mediates between content-type and expected dataType)\n 7650   * - returns the corresponding response\n 7651   */\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.nestable.js:\n  323              mouse.nowX  = e.pageX;\n  324              mouse.nowY  = e.pageY;\n  325:             // distance mouse moved between events\n  326              mouse.distX = mouse.nowX - mouse.lastX;\n  327              mouse.distY = mouse.nowY - mouse.lastY;\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.slimscroll.js:\n   28          position : 'right',\n   29  \n   30:         // distance in pixels between the side edge and the scrollbar\n   31          distance : '1px',\n   32  \n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.sparkline.js:\n  114  *   numberDigitGroupSep - Character to use for group separator in numbers \"1,234\" - Defaults to \",\"\n  115  *   numberDecimalMark - Character to use for the decimal point when formatting numbers - Defaults to \".\"\n  116: *   numberDigitGroupCount - Number of digits between group separator - Defaults to 3\n  117  *\n  118  * There are 7 types of sparkline, selected by supplying a \"type\" option of 'line' (default),\n  ...\n  125  *       lineWidth - Width of line in pixels\n  126  *       normalRangeMin\n  127: *       normalRangeMax - If set draws a filled horizontal bar between these two values marking the \"normal\"\n  128  *                      or expected range of values\n  129  *       normalRangeColor - Color to use for the above bar\n  ...\n  143  *                  can be an Array of values to control the color of individual bars or a range map\n  144  *                  to specify colors for individual ranges of values\n  145: *       barSpacing - Gap between bars in pixels\n  146  *       zeroAxis - Centers the y-axis around zero if true\n  147  *\n  ...\n  151  *       zeroBarColor - Color of draw values\n  152  *       barWidth - Width of bars in pixels\n  153: *       barSpacing - Gap between bars in pixels\n  154  *       colorMap - Optional mappnig of values to colors to override the *BarColor values above\n  155  *                  can be an Array of values to control the color of individual bars or a range map\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery.validate.js:\n  304  		maxlength: $.validator.format(\"Please enter no more than {0} characters.\"),\n  305  		minlength: $.validator.format(\"Please enter at least {0} characters.\"),\n  306: 		rangelength: $.validator.format(\"Please enter a value between {0} and {1} characters long.\"),\n  307: 		range: $.validator.format(\"Please enter a value between {0} and {1}.\"),\n  308  		max: $.validator.format(\"Please enter a value less than or equal to {0}.\"),\n  309  		min: $.validator.format(\"Please enter a value greater than or equal to {0}.\")\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/jquery1x.js:\n 3734  \n 3735  	// jQuery data() is stored in a separate object inside the object's internal data\n 3736: 	// cache in order to avoid key collisions between internal data and user-defined\n 3737  	// data.\n 3738  	if ( !pvt ) {\n ....\n 8670  \n 8671  /* Handles responses to an ajax request:\n 8672:  * - finds the right dataType (mediates between content-type and expected dataType)\n 8673   * - returns the corresponding response\n 8674   */\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/select2.js:\n  799              // for mouse events outside of itself so it can close itself. since the dropdown is now outside the select2's\n  800              // dom it will trigger the popup close, which is not what we want\n  801:             // focusin can cause focus wars between modals and select2 since the dropdown is outside the modal.\n  802              this.dropdown.on(\"click mouseup mousedown touchstart touchend focusin\", function (e) { e.stopPropagation(); });\n  803  \n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/date-time/bootstrap-datepicker.js:\n  777  							// First Thursday of year, year from thursday\n  778  							yth = new Date(Number(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay())%7*864e5),\n  779: 							// Calendar week: ms between thursdays, div ms per day, div 7 days\n  780  							calWeek =  (th - yth) / 864e5 / 7 + 1;\n  781  						html.push('<td class=\"cw\">'+ calWeek +'</td>');\n  ...\n 1275  		dateUpdated: function(e){\n 1276  			// `this.updating` is a workaround for preventing infinite recursion\n 1277: 			// between `changeDate` triggering and `setUTCDate` calling.  Until\n 1278  			// there is a better mechanism.\n 1279  			if (this.updating)\n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/date-time/daterangepicker.js:\n  511                // also explicitly play nice with Bootstrap dropdowns, which stopPropagation when clicking them\n  512                .on('click.daterangepicker', '[data-toggle=dropdown]', this._outsideClickProxy)\n  513:               // and also close when focus changes to outside the picker (eg. tabbing between controls)\n  514                .on('focusin.daterangepicker', this._outsideClickProxy);\n  515  \n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/flot/jquery.flot.js:\n   93  \n   94  		// Determine the screen's ratio of physical to device-independent\n   95: 		// pixels.  This is the ratio between the canvas width that the browser\n   96  		// advertises and the number of pixels actually present in that space.\n   97  \n   ..\n  611                  },\n  612                  interaction: {\n  613:                     redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n  614                  },\n  615                  hooks: {}\n  ...\n 1702  \n 1703              var magn = Math.pow(10, -dec),\n 1704:                 norm = delta / magn, // norm is between 1.0 and 10.0\n 1705                  size;\n 1706  \n\n/Library/WebServer/Documents/beautypost/app/webroot/assets/js/uncompressed/markdown/markdown.js:\n  397  \n  398      // There are two types of lists. Tight and loose. Tight lists have no whitespace\n  399:     // between the items (and result in text just in the <li>) and loose lists,\n  400:     // which have an empty line between list items, resulting in (one or more)\n  401      // paragraphs inside the <li>.\n  402      //\n\n/Library/WebServer/Documents/beautypost/app/webroot/Chart/Chart.js:\n  361  		},\n  362  		splineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n  363: 			//Props to Rob Spencer at scaled innovation for his post on splining between points\n  364  			//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n  365  			var d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n  ...\n 1166  \n 1167  			//Quick debug for bezier curve splining\n 1168: 			//Highlights control points and the line between them.\n 1169  			//Handy for dev - stripped in the min version.\n 1170  \n ....\n 1201  \n 1202  			//Check if within the range of the open/close angle\n 1203: 			var betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n 1204  				withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n 1205  \n 1206: 			return (betweenAngles && withinRadius);\n 1207  			//Ensure within the outside of the arc centre, but inside arc outer\n 1208  		},\n ....\n 1294  			this.yAlign = \"above\";\n 1295  \n 1296: 			//Distance between the actual element.y position and the start of the tooltip caret\n 1297  			var caretPadding = this.caretPadding = 2;\n 1298  \n ....\n 1529  		calculateXLabelRotation : function(){\n 1530  			//Get the width of each grid by calculating the difference\n 1531: 			//between x offsets between 0 and 1.\n 1532  \n 1533  			this.ctx.font = this.font;\n ....\n 2054  		barStrokeWidth : 2,\n 2055  \n 2056: 		//Number - Spacing between each of the X value sets\n 2057  		barValueSpacing : 5,\n 2058  \n 2059: 		//Number - Spacing between data sets within X values\n 2060  		barDatasetSpacing : 1,\n 2061  \n ....\n 2088  				},\n 2089  				calculateBarWidth : function(datasetCount){\n 2090: 					//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n 2091  					var baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n 2092  \n ....\n 2532  		scaleShowVerticalLines: true,\n 2533  \n 2534: 		//Boolean - Whether the line is curved between points\n 2535  		bezierCurve : true,\n 2536  \n 2537: 		//Number - Tension of the bezier curve between points\n 2538  		bezierCurveTension : 0.4,\n 2539  \n ....\n 2831  \n 2832  \n 2833: 				//Draw the line between all the points\n 2834  				ctx.lineWidth = this.options.datasetStrokeWidth;\n 2835  				ctx.strokeStyle = dataset.strokeColor;\n ....\n 3438  \n 3439  \n 3440: 				//Draw the line between all the points\n 3441  				ctx.lineWidth = this.options.datasetStrokeWidth;\n 3442  				ctx.strokeStyle = dataset.strokeColor;\n\n/Library/WebServer/Documents/beautypost/app/webroot/Chart/src/Chart.Bar.js:\n   32  		barStrokeWidth : 2,\n   33  \n   34: 		//Number - Spacing between each of the X value sets\n   35  		barValueSpacing : 5,\n   36  \n   37: 		//Number - Spacing between data sets within X values\n   38  		barDatasetSpacing : 1,\n   39  \n   ..\n   66  				},\n   67  				calculateBarWidth : function(datasetCount){\n   68: 					//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n   69  					var baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n   70  \n\n/Library/WebServer/Documents/beautypost/app/webroot/Chart/src/Chart.Core.js:\n  381  		},\n  382  		splineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n  383: 			//Props to Rob Spencer at scaled innovation for his post on splining between points\n  384  			//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n  385  			var d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n  ...\n 1251  \n 1252  			//Quick debug for bezier curve splining\n 1253: 			//Highlights control points and the line between them.\n 1254  			//Handy for dev - stripped in the min version.\n 1255  \n ....\n 1286  \n 1287  			//Check if within the range of the open/close angle\n 1288: 			var betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n 1289  				withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n 1290  \n 1291: 			return (betweenAngles && withinRadius);\n 1292  			//Ensure within the outside of the arc centre, but inside arc outer\n 1293  		},\n ....\n 1389  			this.yAlign = \"above\";\n 1390  \n 1391: 			//Distance between the actual element.y position and the start of the tooltip caret\n 1392  			var caretPadding = this.caretPadding = 2;\n 1393  \n ....\n 1628  		calculateXLabelRotation : function(){\n 1629  			//Get the width of each grid by calculating the difference\n 1630: 			//between x offsets between 0 and 1.\n 1631  \n 1632  			this.ctx.font = this.font;\n\n/Library/WebServer/Documents/beautypost/app/webroot/Chart/src/Chart.Line.js:\n   23  		scaleShowVerticalLines: true,\n   24  \n   25: 		//Boolean - Whether the line is curved between points\n   26  		bezierCurve : true,\n   27  \n   28: 		//Number - Tension of the bezier curve between points\n   29  		bezierCurveTension : 0.4,\n   30  \n   ..\n  329  \n  330  \n  331: 				//Draw the line between all the points\n  332  				ctx.lineWidth = this.options.datasetStrokeWidth;\n  333  				ctx.strokeStyle = dataset.strokeColor;\n\n/Library/WebServer/Documents/beautypost/app/webroot/Chart/src/Chart.Radar.js:\n  306  \n  307  \n  308: 				//Draw the line between all the points\n  309  				ctx.lineWidth = this.options.datasetStrokeWidth;\n  310  				ctx.strokeStyle = dataset.strokeColor;\n\n/Library/WebServer/Documents/beautypost/app/webroot/js/tinymce/license.txt:\n  108  \n  109    The precise terms and conditions for copying, distribution and\n  110: modification follow.  Pay close attention to the difference between a\n  111  \"work based on the library\" and a \"work that uses the library\".  The\n  112  former contains code derived from the library, whereas the latter must\n\n/Library/WebServer/Documents/beautypost/app/webroot/raty/lib/jquery.raty.js:\n    9   *\n   10   */\n   11: ;(function(b){var a={init:function(c){return this.each(function(){this.self=b(this);a.destroy.call(this.self);this.opt=b.extend(true,{},b.fn.raty.defaults,c);a._adjustCallback.call(this);a._adjustNumber.call(this);a._adjustHints.call(this);this.opt.score=a._adjustedScore.call(this,this.opt.score);if(this.opt.starType!==\"img\"){a._adjustStarType.call(this)}a._adjustPath.call(this);a._createStars.call(this);if(this.opt.cancel){a._createCancel.call(this)}if(this.opt.precision){a._adjustPrecision.call(this)}a._createScore.call(this);a._apply.call(this,this.opt.score);a._setTitle.call(this,this.opt.score);a._target.call(this,this.opt.score);if(this.opt.readOnly){a._lock.call(this)}else{this.style.cursor=\"pointer\";a._binds.call(this)}})},_adjustCallback:function(){var c=[\"number\",\"readOnly\",\"score\",\"scoreName\",\"target\"];for(var d=0;d<c.length;d++){if(typeof this.opt[c[d]]===\"function\"){this.opt[c[d]]=this.opt[c[d]].call(this)}}},_adjustedScore:function(c){if(!c){return c}return a._between(c,0,this.opt.number)},_adjustHints:function(){if(!this.opt.hints){this.opt.hints=[]}if(!this.opt.halfShow&&!this.opt.half){return}var c=this.opt.precision?10:2;for(var e=0;e<this.opt.number;e++){var g=this.opt.hints[e];if(Object.prototype.toString.call(g)!==\"[object Array]\"){g=[g]}this.opt.hints[e]=[];for(var d=0;d<c;d++){var h=g[d],f=g[g.length-1];if(f===undefined){f=null}this.opt.hints[e][d]=h===undefined?f:h}}},_adjustNumber:function(){this.opt.number=a._between(this.opt.number,1,this.opt.numberMax)},_adjustPath:function(){this.opt.path=this.opt.path||\"\";if(this.opt.path&&this.opt.path.charAt(this.opt.path.length-1)!==\"/\"){this.opt.path+=\"/\"}},_adjustPrecision:function(){this.opt.half=true},_adjustStarType:function(){var c=[\"cancelOff\",\"cancelOn\",\"starHalf\",\"starOff\",\"starOn\"];this.opt.path=\"\";for(var d=0;d<c.length;d++){this.opt[c[d]]=this.opt[c[d]].replace(\".\",\"-\")}},_apply:function(c){a._fill.call(this,c);if(c){if(c>0){this.score.val(c)}a._roundStars.call(this,c)}},_between:function(e,d,c){return Math.min(Math.max(parseFloat(e),d),c)},_binds:function(){if(this.cancel){a._bindOverCancel.call(this);a._bindClickCancel.call(this);a._bindOutCancel.call(this)}a._bindOver.call(this);a._bindClick.call(this);a._bindOut.call(this)},_bindClick:function(){var c=this;c.stars.on(\"click.raty\",function(d){var e=true,f=(c.opt.half||c.opt.precision)?c.self.data(\"score\"):(this.alt||b(this).data(\"alt\"));if(c.opt.click){e=c.opt.click.call(c,+f,d)}if(e||e===undefined){if(c.opt.half&&!c.opt.precision){f=a._roundHalfScore.call(c,f)}a._apply.call(c,f)}})},_bindClickCancel:function(){var c=this;c.cancel.on(\"click.raty\",function(d){c.score.removeAttr(\"value\");if(c.opt.click){c.opt.click.call(c,null,d)}})},_bindOut:function(){var c=this;c.self.on(\"mouseleave.raty\",function(d){var e=+c.score.val()||undefined;a._apply.call(c,e);a._target.call(c,e,d);a._resetTitle.call(c);if(c.opt.mouseout){c.opt.mouseout.call(c,e,d)}})},_bindOutCancel:function(){var c=this;c.cancel.on(\"mouseleave.raty\",function(d){var e=c.opt.cancelOff;if(c.opt.starType!==\"img\"){e=c.opt.cancelClass+\" \"+e}a._setIcon.call(c,this,e);if(c.opt.mouseout){var f=+c.score.val()||undefined;c.opt.mouseout.call(c,f,d)}})},_bindOver:function(){var c=this,d=c.opt.half?\"mousemove.raty\":\"mouseover.raty\";c.stars.on(d,function(e){var f=a._getScoreByPosition.call(c,e,this);a._fill.call(c,f);if(c.opt.half){a._roundStars.call(c,f,e);a._setTitle.call(c,f,e);c.self.data(\"score\",f)}a._target.call(c,f,e);if(c.opt.mouseover){c.opt.mouseover.call(c,f,e)}})},_bindOverCancel:function(){var c=this;c.cancel.on(\"mouseover.raty\",function(d){var f=c.opt.path+c.opt.starOff,e=c.opt.cancelOn;if(c.opt.starType===\"img\"){c.stars.attr(\"src\",f)}else{e=c.opt.cancelClass+\" \"+e;c.stars.attr(\"class\",f)}a._setIcon.call(c,this,e);a._target.call(c,null,d);if(c.opt.mouseover){c.opt.mouseover.call(c,null)}})},_buildScoreField:function(){return b(\"<input />\",{name:this.opt.scoreName,type:\"hidden\"}).appendTo(this)},_createCancel:function(){var c=this.opt.path+this.opt.cancelOff,d=b(\"<\"+this.opt.starType+\" />\",{title:this.opt.cancelHint,\"class\":this.opt.cancelClass});if(this.opt.starType===\"img\"){d.attr({src:c,alt:\"x\"})}else{d.attr(\"data-alt\",\"x\").addClass(c)}if(this.opt.cancelPlace===\"left\"){this.self.prepend(\"&#160;\").prepend(d)}else{this.self.append(\"&#160;\").append(d)}this.cancel=d},_createScore:function(){var c=b(this.opt.targetScore);this.score=c.length?c:a._buildScoreField.call(this)},_createStars:function(){for(var e=1;e<=this.opt.number;e++){var d=a._nameForIndex.call(this,e),c={alt:e,src:this.opt.path+this.opt[d]};if(this.opt.starType!==\"img\"){c={\"data-alt\":e,\"class\":c.src}}c.title=a._getHint.call(this,e);b(\"<\"+this.opt.starType+\" />\",c).appendTo(this);if(this.opt.space){this.self.append(e<this.opt.number?\"&#160;\":\"\")}}this.stars=this.self.children(this.opt.starType)},_error:function(c){b(this).text(c);b.error(c)},_fill:function(j){var g=0;for(var c=1;c<=this.stars.length;c++){var d,f=this.stars[c-1],e=a._turnOn.call(this,c,j);if(this.opt.iconRange&&this.opt.iconRange.length>g){var h=this.opt.iconRange[g];d=a._getRangeIcon.call(this,h,e);if(c<=h.range){a._setIcon.call(this,f,d)}if(c===h.range){g++}}else{d=this.opt[e?\"starOn\":\"starOff\"];a._setIcon.call(this,f,d)}}},_getFirstDecimal:function(e){var d=e.toString().split(\".\")[1],c=0;if(d){c=parseInt(d.charAt(0),10);if(d.slice(1,5)===\"9999\"){c++}}return c},_getRangeIcon:function(d,c){return c?d.on||this.opt.starOn:d.off||this.opt.starOff},_getScoreByPosition:function(c,e){var g=parseInt(e.alt||e.getAttribute(\"data-alt\"),10);if(this.opt.half){var d=a._getWidth.call(this),f=parseFloat((c.pageX-b(e).offset().left)/d);g=g-1+f}return g},_getHint:function(h,d){if(h!==0&&!h){return this.opt.noRatedMsg}var c=a._getFirstDecimal.call(this,h),e=Math.ceil(h),f=this.opt.hints[(e||1)-1],g=f,i=!d||this.move;if(this.opt.precision){if(i){c=c===0?9:c-1}g=f[c]}else{if(this.opt.halfShow||this.opt.half){c=i&&c===0?1:c>5?1:0;g=f[c]}}return g===\"\"?\"\":g||h},_getWidth:function(){var c=this.stars[0].width||parseFloat(this.stars.eq(0).css(\"font-size\"));if(!c){a._error.call(this,\"Could not get the icon width!\")}return c},_lock:function(){var c=a._getHint.call(this,this.score.val());this.style.cursor=\"\";this.title=c;this.score.prop(\"readonly\",true);this.stars.prop(\"title\",c);if(this.cancel){this.cancel.hide()}this.self.data(\"readonly\",true)},_nameForIndex:function(c){return this.opt.score&&this.opt.score>=c?\"starOn\":\"starOff\"},_resetTitle:function(d){for(var c=0;c<this.opt.number;c++){this.stars[c].title=a._getHint.call(this,c+1)}},_roundHalfScore:function(e){var d=parseInt(e,10),c=a._getFirstDecimal.call(this,e);if(c!==0){c=c>5?1:0.5}return d+c},_roundStars:function(h,d){var c=(h%1).toFixed(2),e;if(d||this.move){e=c>0.5?\"starOn\":\"starHalf\"}else{if(c>this.opt.round.down){e=\"starOn\";if(this.opt.halfShow&&c<this.opt.round.up){e=\"starHalf\"}else{if(c<this.opt.round.full){e=\"starOff\"}}}}if(e){var f=this.opt[e],g=this.stars[Math.ceil(h)-1];a._setIcon.call(this,g,f)}},_setIcon:function(d,c){d[this.opt.starType===\"img\"?\"src\":\"className\"]=this.opt.path+c},_setTarget:function(c,d){if(d){d=this.opt.targetFormat.toString().replace(\"{score}\",d)}if(c.is(\":input\")){c.val(d)}else{c.html(d)}},_setTitle:function(f,c){if(f){var d=parseInt(Math.ceil(f),10),e=this.stars[d-1];e.title=a._getHint.call(this,f,c)}},_target:function(g,d){if(this.opt.target){var f=b(this.opt.target);if(!f.length){a._error.call(this,\"Target selector invalid or missing!\")}var c=d&&d.type===\"mouseover\";if(g===undefined){g=this.opt.targetText}else{if(g===null){g=c?this.opt.cancelHint:this.opt.targetText}else{if(this.opt.targetType===\"hint\"){g=a._getHint.call(this,g,d)}else{if(this.opt.precision){g=parseFloat(g).toFixed(1)}}var e=d&&d.type===\"mousemove\";if(!c&&!e&&!this.opt.targetKeep){g=this.opt.targetText}}}a._setTarget.call(this,f,g)}},_turnOn:function(c,d){return this.opt.single?(c===d):(c<=d)},_unlock:function(){this.style.cursor=\"pointer\";this.removeAttribute(\"title\");this.score.removeAttr(\"readonly\");this.self.data(\"readonly\",false);for(var c=0;c<this.opt.number;c++){this.stars[c].title=a._getHint.call(this,c+1)}if(this.cancel){this.cancel.css(\"display\",\"\")}},cancel:function(c){return this.each(function(){var d=b(this);if(d.data(\"readonly\")!==true){a[c?\"click\":\"score\"].call(d,null);this.score.removeAttr(\"value\")}})},click:function(c){return this.each(function(){if(b(this).data(\"readonly\")!==true){c=a._adjustedScore.call(this,c);a._apply.call(this,c);if(this.opt.click){this.opt.click.call(this,c,b.Event(\"click\"))}a._target.call(this,c)}})},destroy:function(){return this.each(function(){var c=b(this),d=c.data(\"raw\");if(d){c.off(\".raty\").empty().css({cursor:d.style.cursor}).removeData(\"readonly\")}else{c.data(\"raw\",c.clone()[0])}})},getScore:function(){var d=[],c;this.each(function(){c=this.score.val();d.push(c?+c:undefined)});return(d.length>1)?d:d[0]},move:function(c){return this.each(function(){var g=parseInt(c,10),e=a._getFirstDecimal.call(this,c);if(g>=this.opt.number){g=this.opt.number-1;e=10}var h=a._getWidth.call(this),f=h/10,j=b(this.stars[g]),i=j.offset().left+f*e,d=b.Event(\"mousemove\",{pageX:i});this.move=true;j.trigger(d);this.move=false})},readOnly:function(c){return this.each(function(){var d=b(this);if(d.data(\"readonly\")!==c){if(c){d.off(\".raty\").children(\"img\").off(\".raty\");a._lock.call(this)}else{a._binds.call(this);a._unlock.call(this)}d.data(\"readonly\",c)}})},reload:function(){return a.set.call(this,{})},score:function(){var c=b(this);return arguments.length?a.setScore.apply(c,arguments):a.getScore.call(c)},set:function(c){return this.each(function(){b(this).raty(b.extend({},this.opt,c))})},setScore:function(c){return this.each(function(){if(b(this).data(\"readonly\")!==true){c=a._adjustedScore.call(this,c);a._apply.call(this,c);a._target.call(this,c)}})}};b.fn.raty=function(c){if(a[c]){return a[c].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof c===\"object\"||!c){return a.init.apply(this,arguments)}else{b.error(\"Method \"+c+\" does not exist!\")}}};b.fn.raty.defaults={cancel:false,cancelClass:\"raty-cancel\",cancelHint:\"Cancel this rating!\",cancelOff:\"cancel-off.png\",cancelOn:\"cancel-on.png\",cancelPlace:\"left\",click:undefined,half:false,halfShow:true,hints:[\"bad\",\"poor\",\"regular\",\"good\",\"gorgeous\"],iconRange:undefined,mouseout:undefined,mouseover:undefined,noRatedMsg:\"Not rated yet!\",number:5,numberMax:20,path:undefined,precision:false,readOnly:false,round:{down:0.25,full:0.6,up:0.76},score:undefined,scoreName:\"score\",single:false,space:true,starHalf:\"star-half.png\",starOff:\"star-off.png\",starOn:\"star-on.png\",starType:\"img\",target:undefined,targetFormat:\"{score}\",targetKeep:false,targetScore:undefined,targetText:\"\",targetType:\"hint\"}})(jQuery);\n\n/Library/WebServer/Documents/beautypost/lib/Cake/bootstrap.php:\n  102  \n  103  /**\n  104:  * Path to the cache files directory. It can be shared between hosts in a multi-server setup.\n  105   */\n  106  if (!defined('CACHE')) {\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Console/Command/AclShell.php:\n  440  				)\n  441  			))->addSubcommand('check', array(\n  442: 				'help' => __d('cake_console', 'Check the permissions between an ACO and ARO.'),\n  443  				'parser' => array(\n  444  					'description' => array(\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Console/Command/ApiShell.php:\n   31  \n   32  /**\n   33:  * Map between short name for paths and real paths.\n   34   *\n   35   * @var array\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Console/Command/ConsoleShell.php:\n  275  		if ($this->_isValidModel($modelA) && $this->_isValidModel($modelB) && in_array($association, $this->associations)) {\n  276  			$this->{$modelA}->bindModel(array($association => array($modelB => array('className' => $modelB))), false);\n  277: 			$this->out(__d('cake_console', \"Created %s association between %s and %s\",\n  278  				$association, $modelA, $modelB));\n  279  		} else {\n  ...\n  312  		if ($this->_isValidModel($modelA) && $this->_isValidModel($modelB) && in_array($association, $this->associations) && $validCurrentAssociation) {\n  313  			$this->{$modelA}->unbindModel(array($association => array($modelB)));\n  314: 			$this->out(__d('cake_console', \"Removed %s association between %s and %s\",\n  315  				$association, $modelA, $modelB));\n  316  		} else {\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Console/Command/Task/TestTask.php:\n   55  \n   56  /**\n   57:  * Mapping between packages, and their baseclass + package.\n   58   * This is used to generate App::uses() call to autoload base\n   59   * classes if a developer has forgotten to do so.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Controller/Component/RequestHandlerComponent.php:\n   82  \n   83  /**\n   84:  * A mapping between extensions and deserializers for request bodies of that type.\n   85   * By default only JSON and XML are mapped, use RequestHandlerComponent::addInputType()\n   86   *\n   ..\n   92  \n   93  /**\n   94:  * A mapping between type and viewClass\n   95   * By default only JSON and XML are mapped, use RequestHandlerComponent::viewClassMap()\n   96   *\n   ..\n  120   * Checks to see if a file extension has been parsed by the Router, or if the\n  121   * HTTP_ACCEPT_TYPE has matches only one content type with the supported extensions.\n  122:  * If there is only one matching type between the supported content types & extensions,\n  123   * and the requested mime-types, RequestHandler::$ext is set to that value.\n  124   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Controller/Component/SessionComponent.php:\n   21  \n   22  /**\n   23:  * The CakePHP SessionComponent provides a way to persist client data between\n   24   * page requests. It acts as a wrapper for the `$_SESSION` as well as providing\n   25   * convenience methods for several `$_SESSION` related functions.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Controller/Component/Acl/DbAcl.php:\n  141  \n  142  /**\n  143:  * Get an array of access-control links between the given Aro and Aco\n  144   *\n  145   * @param string $aro ARO The requesting object identifier.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Model.php:\n  144   * public $validate = array(\n  145   *     'age' => array(\n  146:  *         'rule' => array('between', 5, 25)\n  147   *     )\n  148   * );\n  ...\n  173   * public $validate = array(\n  174   *     'age' => array(\n  175:  *         'rule' => array('between', 5, 25),\n  176:  *         'message' => array('The age must be between %d and %d.')\n  177   *     )\n  178   * );\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/ModelValidator.php:\n  545   *\n  546   *		$validator->add('password', array(\n  547:  *			'size' => array('rule' => array('between', 8, 20)),\n  548   *			'hasSpecialCharacter' => array('rule' => 'validateSpecialchar', 'message' => 'not valid')\n  549   *		));\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Permission.php:\n  212  \n  213  /**\n  214:  * Get an array of access-control links between the given Aro and Aco\n  215   *\n  216   * @param string $aro ARO The requesting object identifier.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Behavior/TreeBehavior.php:\n   50  \n   51  /**\n   52:  * Used to preserve state between delete callbacks.\n   53   *\n   54   * @var array\n   ..\n  159  				$scope = array($scope);\n  160  			}\n  161: 			$scope[][$Model->escapeField($left) . \" BETWEEN ? AND ?\"] = array($data[$left] + 1, $data[$right] - 1);\n  162  			$Model->deleteAll($scope);\n  163  		}\n  ...\n  519  		}\n  520  		$edge = $this->_getMax($Model, $scope, $right, $recursive);\n  521: 		$this->_sync($Model, $edge - $node[$left] + 1, '+', 'BETWEEN ' . $node[$left] . ' AND ' . $node[$right]);\n  522: 		$this->_sync($Model, $nextNode[$left] - $node[$left], '-', 'BETWEEN ' . $nextNode[$left] . ' AND ' . $nextNode[$right]);\n  523  		$this->_sync($Model, $edge - $node[$left] - ($nextNode[$right] - $nextNode[$left]), '-', '> ' . $edge);\n  524  \n  ...\n  579  		}\n  580  		$edge = $this->_getMax($Model, $scope, $right, $recursive);\n  581: 		$this->_sync($Model, $edge - $previousNode[$left] + 1, '+', 'BETWEEN ' . $previousNode[$left] . ' AND ' . $previousNode[$right]);\n  582: 		$this->_sync($Model, $node[$left] - $previousNode[$left], '-', 'BETWEEN ' . $node[$left] . ' AND ' . $node[$right]);\n  583  		$this->_sync($Model, $edge - $previousNode[$left] - ($node[$right] - $node[$left]), '-', '> ' . $edge);\n  584  		if (is_int($number)) {\n  ...\n  816  			array($Model->escapeField($parent) => $node[$Model->primaryKey])\n  817  		);\n  818: 		$this->_sync($Model, 1, '-', 'BETWEEN ' . ($node[$left] + 1) . ' AND ' . ($node[$right] - 1));\n  819  		$this->_sync($Model, 2, '-', '> ' . ($node[$right]));\n  820  		$Model->id = $id;\n  ...\n  934  \n  935  		if (empty($parentId)) {\n  936: 			$this->_sync($Model, $edge - $node[$left] + 1, '+', 'BETWEEN ' . $node[$left] . ' AND ' . $node[$right], $created);\n  937  			$this->_sync($Model, $node[$right] - $node[$left] + 1, '-', '> ' . $node[$left], $created);\n  938  		} else {\n  ...\n  966  				$Model->data = $result;\n  967  			} else {\n  968: 				$this->_sync($Model, $edge - $node[$left] + 1, '+', 'BETWEEN ' . $node[$left] . ' AND ' . $node[$right], $created);\n  969  				$diff = $node[$right] - $node[$left] + 1;\n  970  \n  971  				if ($node[$left] > $parentNode[$left]) {\n  972  					if ($node[$right] < $parentNode[$right]) {\n  973: 						$this->_sync($Model, $diff, '-', 'BETWEEN ' . $node[$right] . ' AND ' . ($parentNode[$right] - 1), $created);\n  974  						$this->_sync($Model, $edge - $parentNode[$right] + $diff + 1, '-', '> ' . $edge, $created);\n  975  					} else {\n  976: 						$this->_sync($Model, $diff, '+', 'BETWEEN ' . $parentNode[$right] . ' AND ' . $node[$right], $created);\n  977  						$this->_sync($Model, $edge - $parentNode[$right] + 1, '-', '> ' . $edge, $created);\n  978  					}\n  979  				} else {\n  980: 					$this->_sync($Model, $diff, '-', 'BETWEEN ' . $node[$right] . ' AND ' . ($parentNode[$right] - 1), $created);\n  981  					$this->_sync($Model, $edge - $parentNode[$right] + $diff + 1, '-', '> ' . $edge, $created);\n  982  				}\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Datasource/DataSource.php:\n   20   * DataSource base class\n   21   *\n   22:  * DataSources are the link between models and the source of data that models represent.\n   23   *\n   24   * @link          http://book.cakephp.org/2.0/en/models/datasources.html#basic-api-for-datasources\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Datasource/DboSource.php:\n  182   * @var array\n  183   */\n  184: 	protected $_sqlOps = array('like', 'ilike', 'or', 'not', 'in', 'between', 'regexp', 'similar to');\n  185  \n  186  /**\n  ...\n 1629  \n 1630  /**\n 1631:  * Returns a conditions array for the constraint between two models\n 1632   *\n 1633   * @param string $type Association type\n ....\n 1637   * @param array $assoc\n 1638   * @param string $alias2\n 1639:  * @return array Conditions array defining the constraint between $model and $association\n 1640   */\n 1641  	public function getConstraint($type, $model, $linkModel, $alias, $assoc, $alias2 = null) {\n ....\n 2869  \n 2870  /**\n 2871:  * Translates between PHP boolean values and Database (faked) boolean values\n 2872   *\n 2873   * @param mixed $data Value to be translated\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Datasource/Database/Postgres.php:\n   98   * @var array\n   99   */\n  100: 	protected $_sqlOps = array('like', 'ilike', 'or', 'not', 'in', 'between', '~', '~*', '!~', '!~*', 'similar to');\n  101  \n  102  /**\n  ...\n  780  \n  781  /**\n  782:  * Translates between PHP boolean values and PostgreSQL boolean values\n  783   *\n  784   * @param mixed $data Value to be translated\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Datasource/Database/Sqlserver.php:\n   53  \n   54  /**\n   55:  * Creates a map between field aliases and numeric indexes. Workaround for the\n   56   * SQL Server driver's 30-character column name limitation.\n   57   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Model/Validator/CakeValidationSet.php:\n  187   *		$set\n  188   *			->setRule('required', array('rule' => 'notEmpty', 'required' => true))\n  189:  *			->setRule('inRange', array('rule' => array('between', 4, 10))\n  190   * }}}\n  191   *\n  ...\n  229   *		$set->setRules(array(\n  230   *			'required' => array('rule' => 'notEmpty', 'required' => true),\n  231:  *			'inRange' => array('rule' => array('between', 4, 10)\n  232   * 		));\n  233   * }}}\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Network/CakeRequest.php:\n   46   * Array of POST data. Will contain form data as well as uploaded files.\n   47   * Inputs prefixed with 'data' will have the data prefix removed. If there is\n   48:  * overlap between an input prefixed with data and one without, the 'data' prefixed\n   49   * value will take precedence.\n   50   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Network/CakeResponse.php:\n  635   *        codes. The codes must be integers greater than 99 and less than 1000. Keep in\n  636   *        mind that the HTTP specification outlines that status codes begin with a digit\n  637:  *        between 1 and 5, which defines the class of response the client is to expect.\n  638   *        Example:\n  639   *\n  ...\n 1367   * @param File $file File object\n 1368   * @param array $range The range to read out of the file.\n 1369:  * @return boolean True is whole file is echoed successfully or false if client connection is lost in between\n 1370   */\n 1371  	protected function _sendFile($file, $range) {\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Model/ModelIntegrationTest.php:\n 1266  \n 1267  /**\n 1268:  * ensure that exists() does not persist between method calls reset on create\n 1269   *\n 1270   * @return void\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Model/ModelValidationTest.php:\n  739  					'last' => false\n  740  				),\n  741: 				'between' => array(\n  742: 					'rule' => array('between', 5, 15),\n  743  					'message' => array('You may enter up to %s chars (minimum is %s chars)', 14, 6)\n  744  				)\n  ...\n 1817  		$set = array(\n 1818  			'numeric' => array('rule' => 'numeric', 'allowEmpty' => false),\n 1819: 			'range' => array('rule' => array('between', 1, 5), 'allowEmpty' => false),\n 1820  		);\n 1821  		$Validator['other'] = $set;\n ....\n 1826  		$this->assertCount(2, $validators);\n 1827  		$this->assertEquals('numeric', $validators['numeric']->rule);\n 1828: 		$this->assertEquals(array('between', 1, 5), $validators['range']->rule);\n 1829  \n 1830  		$Validator['new'] = new CakeValidationSet('new', $set, array());\n ....\n 1835  		$this->assertCount(2, $validators);\n 1836  		$this->assertEquals('numeric', $validators['numeric']->rule);\n 1837: 		$this->assertEquals(array('between', 1, 5), $validators['range']->rule);\n 1838  	}\n 1839  \n ....\n 1890  		$set = array(\n 1891  			'numeric' => array('rule' => 'numeric', 'allowEmpty' => false),\n 1892: 			'range' => array('rule' => array('between', 1, 5), 'allowEmpty' => false),\n 1893  		);\n 1894  		$Validator['other'] = $set;\n ....\n 1911  \n 1912  		$Validator->add('other', 'numeric', array('rule' => 'numeric', 'allowEmpty' => false));\n 1913: 		$Validator->add('other', 'range', array('rule' => array('between', 1, 5), 'allowEmpty' => false));\n 1914  		$rules = $Validator['other'];\n 1915  		$this->assertEquals('other', $rules->field);\n ....\n 1918  		$this->assertCount(2, $validators);\n 1919  		$this->assertEquals('numeric', $validators['numeric']->rule);\n 1920: 		$this->assertEquals(array('between', 1, 5), $validators['range']->rule);\n 1921  	}\n 1922  \n ....\n 1935  \n 1936  		$Validator->add('other', 'numeric', array('rule' => 'numeric', 'allowEmpty' => false));\n 1937: 		$Validator->add('other', 'range', array('rule' => array('between', 1, 5), 'allowEmpty' => false));\n 1938  		$this->assertTrue(isset($Validator['other']));\n 1939  \n ....\n 2099  		$set = array(\n 2100  			'numeric' => array('rule' => 'numeric', 'allowEmpty' => false),\n 2101: 			'range' => array('rule' => array('between', 1, 5), 'allowEmpty' => false),\n 2102  		);\n 2103  \n ....\n 2109  		$this->assertCount(2, $validators);\n 2110  		$this->assertEquals('numeric', $validators['numeric']->rule);\n 2111: 		$this->assertEquals(array('between', 1, 5), $validators['range']->rule);\n 2112  \n 2113  		$set = new CakeValidationSet('other', array(\n 2114  			'a' => array('rule' => 'numeric', 'allowEmpty' => false),\n 2115: 			'b' => array('rule' => array('between', 1, 5), 'allowEmpty' => false),\n 2116  		));\n 2117  \n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php:\n 3616  \n 3617  /**\n 3618:  * test that bindModel and unbindModel work with find() calls in between.\n 3619   *\n 3620   * @return void\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php:\n  189  \n  190  /**\n  191:  * Tests the interaction (non-interference) between TreeBehavior and other behaviors with respect\n  192   * to callback hooks\n  193   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php:\n 2031  		$this->assertEquals($expected, $result);\n 2032  \n 2033: 		$result = $this->Dbo->conditions(\"score BETWEEN 90.1 AND 95.7\");\n 2034: 		$expected = \" WHERE score BETWEEN 90.1 AND 95.7\";\n 2035  		$this->assertEquals($expected, $result);\n 2036  \n ....\n 2289  		$this->assertEquals($expected, $result);\n 2290  \n 2291: 		$result = $this->Dbo->conditions(array('score BETWEEN ? AND ?' => array(90.1, 95.7)));\n 2292: 		$expected = \" WHERE `score` BETWEEN 90.1 AND 95.7\";\n 2293  		$this->assertEquals($expected, $result);\n 2294  \n ....\n 2354  \n 2355  		$result = $this->Dbo->conditions(array('or' => array(\n 2356: 			'score BETWEEN ? AND ?' => array('4', '5'), 'rating >' => '20'\n 2357  		)));\n 2358: 		$expected = \" WHERE ((`score` BETWEEN '4' AND '5') OR (`rating` > '20'))\";\n 2359  		$this->assertEquals($expected, $result);\n 2360  \n 2361  		$result = $this->Dbo->conditions(array('or' => array(\n 2362: 			'score BETWEEN ? AND ?' => array('4', '5'), array('score >' => '20')\n 2363  		)));\n 2364: 		$expected = \" WHERE ((`score` BETWEEN '4' AND '5') OR (`score` > '20'))\";\n 2365  		$this->assertEquals($expected, $result);\n 2366  \n 2367  		$result = $this->Dbo->conditions(array('and' => array(\n 2368: 			'score BETWEEN ? AND ?' => array('4', '5'), array('score >' => '20')\n 2369  		)));\n 2370: 		$expected = \" WHERE ((`score` BETWEEN '4' AND '5') AND (`score` > '20'))\";\n 2371  		$this->assertEquals($expected, $result);\n 2372  \n ....\n 2422  		$this->assertEquals($expected, $result);\n 2423  \n 2424: 		$conditions['NOT'] = array('Listing.expiration BETWEEN ? AND ?' => array(\"1\", \"100\"));\n 2425  		$conditions[0]['OR'] = array(\n 2426  			\"Listing.title LIKE\" => \"%term%\",\n ....\n 2432  		);\n 2433  		$result = $this->Dbo->conditions($conditions);\n 2434: 		$expected = \" WHERE NOT (`Listing`.`expiration` BETWEEN '1' AND '100') AND\" .\n 2435  		\" ((`Listing`.`title` LIKE '%term%') OR (`Listing`.`description` LIKE '%term%')) AND\" .\n 2436  		\" ((`Listing`.`title` LIKE '%term_2%') OR (`Listing`.`description` LIKE '%term_2%'))\";\n ....\n 2498  \n 2499  		$result = $this->Dbo->conditions(array(\n 2500: 			'ASCII(SUBSTRING(keyword, 1, 1)) BETWEEN ? AND ?' => array(65, 90)\n 2501  		));\n 2502: 		$expected = ' WHERE ASCII(SUBSTRING(keyword, 1, 1)) BETWEEN 65 AND 90';\n 2503  		$this->assertEquals($expected, $result);\n 2504  \n 2505  		$result = $this->Dbo->conditions(array('or' => array(\n 2506: 			'? BETWEEN Model.field1 AND Model.field2' => '2009-03-04'\n 2507  		)));\n 2508: 		$expected = \" WHERE '2009-03-04' BETWEEN Model.field1 AND Model.field2\";\n 2509  		$this->assertEquals($expected, $result);\n 2510  	}\n ....\n 2517  	public function testConditionsWithReplacements() {\n 2518  		$result = $this->Dbo->conditions(array(\n 2519: 			'score BETWEEN :0 AND :1' => array(90.1, 95.7)\n 2520  		));\n 2521: 		$expected = \" WHERE `score` BETWEEN 90.1 AND 95.7\";\n 2522  		$this->assertEquals($expected, $result);\n 2523  \n 2524  		$result = $this->Dbo->conditions(array(\n 2525: 			'score BETWEEN ? AND ?' => array(90.1, 95.7)\n 2526  		));\n 2527: 		$expected = \" WHERE `score` BETWEEN 90.1 AND 95.7\";\n 2528  		$this->assertEquals($expected, $result);\n 2529  	}\n ....\n 2625  		$this->assertEquals($expected, $result);\n 2626  \n 2627: 		$result = $this->Dbo->conditions(array('Article2.rate_sum BETWEEN ? AND ?' => array(0, 10)), true, true, $this->Model);\n 2628: 		$expected = \" WHERE `Article2`.`rate_sum` BETWEEN 0 AND 10\";\n 2629  		$this->assertEquals($expected, $result);\n 2630  \n 2631: 		$result = $this->Dbo->conditions(array('Article2.rate_sum BETWEEN ? AND ?' => array('0', '10')), true, true, $this->Model);\n 2632: 		$expected = \" WHERE `Article2`.`rate_sum` BETWEEN 0 AND 10\";\n 2633  		$this->assertEquals($expected, $result);\n 2634  \n 2635: 		$result = $this->Dbo->conditions(array('Article2.rate_sum BETWEEN ? AND ?' => array('1', '10')), true, true, $this->Model);\n 2636: 		$expected = \" WHERE `Article2`.`rate_sum` BETWEEN 1 AND 10\";\n 2637  		$this->assertEquals($expected, $result);\n 2638  	}\n ....\n 3289  		$this->assertEquals($expected, $result);\n 3290  \n 3291: 		$conditions = array('this_moment BETWEEN ? AND ?' => array(1, 2));\n 3292: 		$expected = 'NOW() BETWEEN 1 AND 2';\n 3293  		$result = $this->Dbo->conditions($conditions, true, false, $Article);\n 3294  		$this->assertEquals($expected, $result);\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Utility/SetTest.php:\n 2832  				</item>\n 2833  				<item>\n 2834: 				<title>Re: share views between actions?</title>\n 2835  				<link>http://groups.google.com/group/cake-php/msg/8b350d898707dad8</link>\n 2836  				<description>Then perhaps you might do us all a favour and refrain from replying to &lt;br&gt; things you do not understand. That goes especially for asinine comments. &lt;br&gt; Indeed. &lt;br&gt; To sum up: &lt;br&gt; No comment. &lt;br&gt; In my day, a simple &amp;quot;RTFM&amp;quot; would suffice. I&#39;ll keep in mind to ignore any &lt;br&gt; further responses from you. &lt;br&gt; You (and I) were referring to the *online documentation*, not other</description>\n ....\n 2860  					),\n 2861  					array(\n 2862: 						'title' => 'Re: share views between actions?',\n 2863  						'link' => 'http://groups.google.com/group/cake-php/msg/8b350d898707dad8',\n 2864  						'description' => 'Then perhaps you might do us all a favour and refrain from replying to <br> things you do not understand. That goes especially for asinine comments. <br> Indeed. <br> To sum up: <br> No comment. <br> In my day, a simple &quot;RTFM&quot; would suffice. I\\'ll keep in mind to ignore any <br> further responses from you. <br> You (and I) were referring to the *online documentation*, not other',\n ....\n 2937  				</item>\n 2938  				<item>\n 2939: 				<title>Re: share views between actions?</title>\n 2940  				<link>http://groups.google.com/group/cake-php/msg/8b350d898707dad8</link>\n 2941  				<description>Then perhaps you might do us all a favour and refrain from replying to &lt;br&gt; things you do not understand. That goes especially for asinine comments. &lt;br&gt; Indeed. &lt;br&gt; To sum up: &lt;br&gt; No comment. &lt;br&gt; In my day, a simple &amp;quot;RTFM&amp;quot; would suffice. I&#39;ll keep in mind to ignore any &lt;br&gt; further responses from you. &lt;br&gt; You (and I) were referring to the *online documentation*, not other</description>\n ....\n 2972  					),\n 2973  					array(\n 2974: 						'title' => 'Re: share views between actions?',\n 2975  						'link' => 'http://groups.google.com/group/cake-php/msg/8b350d898707dad8',\n 2976  						'description' => 'Then perhaps you might do us all a favour and refrain from replying to <br> things you do not understand. That goes especially for asinine comments. <br> Indeed. <br> To sum up: <br> No comment. <br> In my day, a simple &quot;RTFM&quot; would suffice. I\\'ll keep in mind to ignore any <br> further responses from you. <br> You (and I) were referring to the *online documentation*, not other',\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/Utility/ValidationTest.php:\n  204  \n  205  /**\n  206:  * testBetween method\n  207   *\n  208   * @return void\n  209   */\n  210: 	public function testBetween() {\n  211: 		$this->assertTrue(Validation::between('abcdefg', 1, 7));\n  212: 		$this->assertTrue(Validation::between('', 0, 7));\n  213: 		$this->assertTrue(Validation::between('אกあアꀀ豈', 1, 7));\n  214  \n  215: 		$this->assertFalse(Validation::between('abcdefg', 1, 6));\n  216: 		$this->assertFalse(Validation::between('ÆΔΩЖÇ', 1, 3));\n  217  	}\n  218  \n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/Case/View/Helper/FormHelperTest.php:\n   81  		'non_existing' => array(),\n   82  		'idontexist' => array(),\n   83: 		'imrequired' => array('rule' => array('between', 5, 30), 'allowEmpty' => false),\n   84  		'imrequiredonupdate' => array('notEmpty' => array('rule' => 'alphaNumeric', 'on' => 'update')),\n   85  		'imrequiredoncreate' => array('required' => array('rule' => 'alphaNumeric', 'on' => 'create')),\n   ..\n   94  		'imalsonotrequired' => array(\n   95  			'alpha' => array('rule' => 'alphaNumeric', 'allowEmpty' => true),\n   96: 			'between' => array('rule' => array('between', 5, 30)),\n   97  		),\n   98  		'imalsonotrequired2' => array(\n   99  			'alpha' => array('rule' => 'alphaNumeric', 'allowEmpty' => true),\n  100: 			'between' => array('rule' => array('between', 5, 30), 'allowEmpty' => true),\n  101  		),\n  102: 		'imnotrequiredeither' => array('required' => true, 'rule' => array('between', 5, 30), 'allowEmpty' => true),\n  103  		'iamrequiredalways' => array(\n  104  			'email' => array('rule' => 'email'),\n  105  			'rule_on_create' => array('rule' => array('maxLength', 50), 'on' => 'create'),\n  106: 			'rule_on_update' => array('rule' => array('between', 1, 50), 'on' => 'update'),\n  107  		),\n  108  		'boolean_field' => array('rule' => 'boolean')\n  ...\n 3799  \n 3800  /**\n 3801:  * Test radio inputs with between as string or array. Also ensure\n 3802:  * that an array with less between elements works.\n 3803   *\n 3804   * @return void\n 3805   */\n 3806: 	public function testRadioBetween() {\n 3807  		$result = $this->Form->radio(\n 3808  			'Model.field',\n 3809  			array('option A', 'option B'),\n 3810: 			array('between' => 'I am between')\n 3811  		);\n 3812  		$expected = array(\n ....\n 3815  			'Field',\n 3816  			'/legend',\n 3817: 			'I am between',\n 3818  			'input' => array(\n 3819  				'type' => 'hidden', 'name' => 'data[Model][field]',\n ....\n 3841  			'Model.field',\n 3842  			array('option A', 'option B', 'option C'),\n 3843: 			array('separator' => '--separator--', 'between' => array('between A', 'between B', 'between C'))\n 3844  		);\n 3845  \n ....\n 3860  			'option A',\n 3861  			'/label',\n 3862: 			'between A',\n 3863  			'--separator--',\n 3864  			array('input' => array(\n ....\n 3869  			'option B',\n 3870  			'/label',\n 3871: 			'between B',\n 3872  			'--separator--',\n 3873  			array('input' => array(\n ....\n 3878  			'option C',\n 3879  			'/label',\n 3880: 			'between C',\n 3881  			'/fieldset'\n 3882  		);\n ....\n 3889  			'after' => '--after--',\n 3890  			'separator' => '--separator--',\n 3891: 			'between' => array('--between first--', '--between second--')\n 3892  		));\n 3893  \n ....\n 3904  			'first',\n 3905  			'/label',\n 3906: 			'--between first--',\n 3907  			'--separator--',\n 3908  			array('input' => array('type' => 'radio', 'name' => 'data[Model][field]', 'value' => '2', 'id' => 'ModelField2')),\n ....\n 3910  			'second',\n 3911  			'/label',\n 3912: 			'--between second--',\n 3913  			'/fieldset',\n 3914  			'--after--',\n ....\n 3923  			'after' => '--after--',\n 3924  			'separator' => '--separator--',\n 3925: 			'between' => array('--between first--')\n 3926  		));\n 3927  \n ....\n 3938  			'first',\n 3939  			'/label',\n 3940: 			'--between first--',\n 3941  			'--separator--',\n 3942  			array('input' => array('type' => 'radio', 'name' => 'data[Model][field]', 'value' => '2', 'id' => 'ModelField2')),\n ....\n 8252  				'label' => false,\n 8253  				'error' => array('attributes' => array('wrap' => 'small', 'class' => 'error')),\n 8254: 				'format' => array('before', 'label', 'between', 'input', 'after', 'error')\n 8255  			)\n 8256  		));\n ....\n 9514  \n 9515  /**\n 9516:  * tests the ability to change the order of the form input placeholder \"input\", \"label\", \"before\", \"between\", \"after\", \"error\"\n 9517   *\n 9518   * @return void\n ....\n 9552  \n 9553  		$result = $this->Form->input('Contact.email', array(\n 9554: 			'type' => 'text', 'format' => array('input', 'between', 'label', 'after'),\n 9555: 			'between' => '<div>Something in the middle</div>',\n 9556  			'after' => '<span>Some text at the end</span>'\n 9557  		));\n ....\n 9578  			'type' => 'radio',\n 9579  			'options' => array('email' => 'Email', 'pigeon' => 'Pigeon'),\n 9580: 			'between' => 'I am between',\n 9581  		));\n 9582  		$expected = array(\n ....\n 9586  			'Method',\n 9587  			'/legend',\n 9588: 			'I am between',\n 9589  			'input' => array(\n 9590  				'type' => 'hidden', 'name' => 'data[Contact][method]',\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/test_app/Model/Extract.php:\n   36  				'message' => 'double \"quoted\" validation'\n   37  			),\n   38: 			'between' => array(\n   39: 				'rule' => array('between', 5, 15),\n   40  				'message' => \"single 'quoted' validation\"\n   41  			)\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Test/test_app/Model/PersisterOne.php:\n   38  				'message' => 'Post title is required'\n   39  			),\n   40: 			'between' => array(\n   41: 				'rule' => array('between', 5, 15),\n   42  				'message' => array('You may enter up to %s chars (minimum is %s chars)', 14, 6)\n   43  			)\n\n/Library/WebServer/Documents/beautypost/lib/Cake/TestSuite/CakeTestCase.php:\n   46   *\n   47   * Set this to false to avoid tables to be dropped if they already exist\n   48:  * between each test method. Tables will still be dropped at the\n   49   * end of each test runner execution.\n   50   *\n   ..\n  370   *\n  371   * Important: This function is very forgiving about whitespace and also accepts any\n  372:  * permutation of attribute order. It will also allow whitespace between specified tags.\n  373   *\n  374   * @param string $string An HTML/XHTML/XML string\n  ...\n  681  \n  682  /**\n  683:  * Compatibility function to test if value is between an acceptable range\n  684   *\n  685   * @param mixed $result\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/CakeTime.php:\n   51  /**\n   52   * The format to use when formatting a time using `CakeTime::niceShort()`\n   53:  * and the difference is between 3 and 7 days\n   54   *\n   55   * @var string\n   ..\n  430  \n  431  /**\n  432:  * Returns a partial SQL string to search for all records between two dates.\n  433   *\n  434   * @param integer|string|DateTime $begin UNIX timestamp, strtotime() valid string or DateTime object\n  ...\n  449  \n  450  /**\n  451:  * Returns a partial SQL string to search for all records between two times\n  452   * occurring on the same day.\n  453   *\n  ...\n  699  /**\n  700   * Returns either a relative or a formatted absolute date depending\n  701:  * on the difference between the current time and given datetime.\n  702   * $datetime should be in a *strtotime* - parsable format, like MySQL's datetime datatype.\n  703   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/Folder.php:\n  319  \n  320  /**\n  321:  * Returns $path with $element added, with correct slash in-between.\n  322   *\n  323   * @param string $path Path\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/Hash.php:\n  597  \n  598  /**\n  599:  * This function can be thought of as a hybrid between PHP's `array_merge` and `array_merge_recursive`.\n  600   *\n  601:  * The difference between this method and the built-in ones, is that if an array key contains another array, then\n  602   * Hash::merge() will behave in a recursive fashion (unlike `array_merge`). But it will not act recursively for\n  603   * keys that contain scalar values (unlike `array_merge_recursive`).\n  ...\n  849  \n  850  /**\n  851:  * Computes the difference between two complex arrays.\n  852   * This method differs from the built-in array_diff() in that it will preserve keys\n  853   * and work on multi-dimensional arrays.\n  ...\n  878  \n  879  /**\n  880:  * Merges the difference between $data and $compare onto $data.\n  881   *\n  882   * @param array $data The data to append onto.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/Security.php:\n  159  			trigger_error(__d(\n  160  				'cake_dev',\n  161: 				'Invalid value, cost must be between %s and %s',\n  162  				array(4, 31)\n  163  			), E_USER_WARNING);\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/Set.php:\n   29  \n   30  /**\n   31:  * This function can be thought of as a hybrid between PHP's array_merge and array_merge_recursive. The difference\n   32   * to the two is that if an array key contains another array then the function behaves recursive (unlike array_merge)\n   33   * but does not do if for keys containing strings (unlike array_merge_recursive).\n   ..\n  674  \n  675  /**\n  676:  * Computes the difference between a Set and an array, two Sets, or two arrays\n  677   *\n  678   * @param mixed $val1 First value\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/String.php:\n   99  \n  100  /**\n  101:  * Tokenizes a string using $separator, ignoring any instance of $separator that appears between\n  102   * $leftBound and $rightBound\n  103   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/Utility/Validation.php:\n   98   * Checks that a string length is within s specified range.\n   99   * Spaces are included in the character count.\n  100:  * Returns true is string matches value min, max, or between min and max,\n  101   *\n  102   * @param string $check Value to check for length\n  ...\n  105   * @return boolean Success\n  106   */\n  107: 	public static function between($check, $min, $max) {\n  108  		$length = mb_strlen($check);\n  109  		return ($length >= $min && $length <= $max);\n\n/Library/WebServer/Documents/beautypost/lib/Cake/View/Helper/CacheHelper.php:\n   32  /**\n   33   * Array of strings replaced in cached views.\n   34:  * The strings are found between `<!--nocache--><!--/nocache-->` in views\n   35   *\n   36   * @var array\n   ..\n   89  \n   90  /**\n   91:  * Parse a file + output. Matches nocache tags between the current output and the current file\n   92   * stores a reference of the file, so the generated can be swapped back with the file contents when\n   93   * writing the cache file.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/View/Helper/FormHelper.php:\n  976   * - `before` - Content to place before the label + input.\n  977   * - `after` - Content to place after the label + input.\n  978:  * - `between` - Content to place between the label + input.\n  979   * - `format` - Format template for element order. Any element that is not in the array, will not be in the output.\n  980:  *	- Default input format order: array('before', 'label', 'between', 'input', 'after', 'error')\n  981:  *	- Default checkbox format order: array('before', 'input', 'between', 'label', 'after', 'error')\n  982   *	- Hidden input will not be formatted\n  983   *	- Radio buttons cannot have the order of input and label elements controlled with these settings.\n  ...\n 1021  \n 1022  		$type = $options['type'];\n 1023: 		$out = array('before' => $options['before'], 'label' => $label, 'between' => $options['between'], 'after' => $options['after']);\n 1024  		$format = $this->_getFormat($options);\n 1025  \n 1026: 		unset($options['type'], $options['before'], $options['between'], $options['after'], $options['format']);\n 1027  \n 1028  		$out['error'] = null;\n ....\n 1037  		}\n 1038  \n 1039: 		if ($type === 'radio' && isset($out['between'])) {\n 1040: 			$options['between'] = $out['between'];\n 1041: 			$out['between'] = null;\n 1042  		}\n 1043  		$out['input'] = $this->_getInput(compact('type', 'fieldName', 'options', 'radioOptions', 'selected', 'dateFormat', 'timeFormat'));\n ....\n 1104  	protected function _parseOptions($options) {\n 1105  		$options = array_merge(\n 1106: 			array('before' => null, 'between' => null, 'after' => null, 'format' => null),\n 1107  			$this->_inputDefaults,\n 1108  			$options\n ....\n 1233  		}\n 1234  		if ($options['type'] === 'checkbox') {\n 1235: 			return array('before', 'input', 'between', 'label', 'after', 'error');\n 1236  		}\n 1237: 		return array('before', 'label', 'between', 'input', 'after', 'error');\n 1238  	}\n 1239  \n ....\n 1460   * ### Attributes:\n 1461   *\n 1462:  * - `separator` - define the string in between the radio buttons\n 1463:  * - `between` - the string between legend and input set or array of strings to insert\n 1464:  *    strings between each input block\n 1465   * - `legend` - control whether or not the widget set has a fieldset & legend\n 1466   * - `value` - indicate a value that is should be checked\n ....\n 1508  		}\n 1509  \n 1510: 		$between = null;\n 1511: 		if (isset($attributes['between'])) {\n 1512: 			$between = $attributes['between'];\n 1513: 			unset($attributes['between']);\n 1514  		}\n 1515  \n ....\n 1554  			}\n 1555  \n 1556: 			if (is_array($between)) {\n 1557: 				$optTitle .= array_shift($between);\n 1558  			}\n 1559  			$allOptions = array_merge($attributes, $optionsHere);\n ....\n 1577  		$out = $hidden . implode($separator, $out);\n 1578  \n 1579: 		if (is_array($between)) {\n 1580: 			$between = '';\n 1581  		}\n 1582  		if ($legend) {\n 1583: 			$out = $this->Html->useTag('fieldset', '', $this->Html->useTag('legend', $legend) . $between . $out);\n 1584  		}\n 1585  		return $out;\n ....\n 2424   * - `maxYear` The maximum year to use in the year select\n 2425   * - `interval` The interval for the minutes select. Defaults to 1\n 2426:  * - `separator` The contents of the string between select elements. Defaults to '-'\n 2427   * - `empty` - If true, the empty select option is shown. If a string,\n 2428   *   that string is displayed as the empty element.\n\n/Library/WebServer/Documents/beautypost/lib/Cake/View/Helper/HtmlHelper.php:\n  598  /**\n  599   * Begin a script block that captures output until HtmlHelper::scriptEnd()\n  600:  * is called. This capturing block will capture all output between the methods\n  601   * and create a scriptBlock from it.\n  602   *\n  ...\n  703   *\n  704   * ### Options\n  705:  * - `separator` Separator content to insert in between breadcrumbs, defaults to ''\n  706   * - `firstClass` Class for wrapper tag on the first breadcrumb, defaults to 'first'\n  707   * - `lastClass` Class for wrapper tag on current active page, defaults to 'last'\n\n/Library/WebServer/Documents/beautypost/lib/Cake/View/Helper/PaginatorHelper.php:\n  837   * - `after` Content to insert after the link/tag\n  838   * - `model` The model to use defaults to PaginatorHelper::defaultModel()\n  839:  * - `separator` Content between the generated links, defaults to ' | '\n  840   * - `ellipsis` Content for ellipsis, defaults to '...'\n  841   *\n  ...\n  903   * - `before` Content to insert before the link/tag\n  904   * - `model` The model to use defaults to PaginatorHelper::defaultModel()\n  905:  * - `separator` Content between the generated links, defaults to ' | '\n  906   * - `ellipsis` Content for ellipsis, defaults to '...'\n  907   *\n\n/Library/WebServer/Documents/beautypost/lib/Cake/View/Helper/TimeHelper.php:\n  208  \n  209  /**\n  210:  * Returns a partial SQL string to search for all records between two dates.\n  211   *\n  212   * @see CakeTime::daysAsSql()\n  ...\n  224  \n  225  /**\n  226:  * Returns a partial SQL string to search for all records between two times\n  227   * occurring on the same day.\n  228   *\n\n/Library/WebServer/Documents/beautypost/plugins/DebugKit/Lib/DebugKitDebugger.php:\n  115  \n  116  /**\n  117:  * Get the difference in time between the timer start and timer end.\n  118   *\n  119   * @param $name string the name of the timer you want elapsed time for.\n\n/Library/WebServer/Documents/beautypost/plugins/DebugKit/Lib/DebugTimer.php:\n  159  \n  160  /**\n  161:  * Get the difference in time between the timer start and timer end.\n  162   *\n  163   * @param $name string the name of the timer you want elapsed time for.\n\n/Library/WebServer/Documents/beautypost/plugins/DebugKit/webroot/js/js_debug_toolbar.js:\n  197  	},\n  198  \n  199: 	// Go between hide() and show() depending on element.style.display\n  200  	toggle: function (element) {\n  201  		if (element.style.display === 'none') {\n\n/Library/WebServer/Documents/beautypost/plugins/TwitterKit/Vendor/http_socket_oauth/http_socket_oauth.php:\n   96      $request['auth'] = array_merge($this->defaults, $request['auth']);\n   97  \n   98:     // Nonce, or number used once is used to distinguish between different\n   99      // requests to the OAuth provider\n  100      if (!isset($request['auth']['oauth_nonce'])) {\n\n302 matches across 95 files\n",
			"settings":
			{
				"buffer_size": 114280,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "app/View/Collection/detail.php",
			"settings":
			{
				"buffer_size": 23617,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Review/monitor.php",
			"settings":
			{
				"buffer_size": 5547,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Layouts/default.ctp",
			"settings":
			{
				"buffer_size": 3784,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Elements/common/headerGnav.php",
			"settings":
			{
				"buffer_size": 1109,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminattr/input.php",
			"settings":
			{
				"buffer_size": 2241,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/GenreAttr.php",
			"settings":
			{
				"buffer_size": 4343,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Login/index.php",
			"settings":
			{
				"buffer_size": 5910,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Model/Mailmagazine.php",
			"settings":
			{
				"buffer_size": 3358,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Adminmonitor/index.php",
			"settings":
			{
				"buffer_size": 2808,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/View/Maker/index.php",
			"settings":
			{
				"buffer_size": 4552,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/View/glossary/index.php",
			"settings":
			{
				"buffer_size": 1721,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 137.0,
		"last_filter": "package control:in",
		"selected_items":
		[
			[
				"package control:in",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git pu",
				"Git: Pull"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"gitco",
				"Git: Commit"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add Current File"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 579.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"git add ./*",
			"git add newfile",
			"git init",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), ‘wb’).write(urllib.request.urlopen( ‘http://sublime.wbond.net/’ + pf.replace(‘ ‘,’%20′)).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Library/WebServer/Documents/beautypost",
		"/Library/WebServer/Documents/beautypost/app",
		"/Library/WebServer/Documents/beautypost/app/Config",
		"/Library/WebServer/Documents/beautypost/app/Model",
		"/Library/WebServer/Documents/beautypost/app/View",
		"/Library/WebServer/Documents/beautypost/app/View/Adminblog",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitem",
		"/Library/WebServer/Documents/beautypost/app/View/Adminkeyword",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmaster",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmonitor",
		"/Library/WebServer/Documents/beautypost/app/View/Adminquestion",
		"/Library/WebServer/Documents/beautypost/app/View/Admintype",
		"/Library/WebServer/Documents/beautypost/app/View/Adminuser",
		"/Library/WebServer/Documents/beautypost/app/View/Collection",
		"/Library/WebServer/Documents/beautypost/app/View/Column",
		"/Library/WebServer/Documents/beautypost/app/View/Compare",
		"/Library/WebServer/Documents/beautypost/app/View/Contact",
		"/Library/WebServer/Documents/beautypost/app/View/Forgetpassword",
		"/Library/WebServer/Documents/beautypost/app/View/Login",
		"/Library/WebServer/Documents/beautypost/app/View/Mypage",
		"/Library/WebServer/Documents/beautypost/app/View/Pages",
		"/Library/WebServer/Documents/beautypost/app/View/Question",
		"/Library/WebServer/Documents/beautypost/app/View/Regist",
		"/Library/WebServer/Documents/beautypost/app/View/Review",
		"/Library/WebServer/Documents/beautypost/app/View/TwLogin",
		"/Library/WebServer/Documents/beautypost/app/View/Type",
		"/Library/WebServer/Documents/beautypost/app/View/Voice",
		"/Library/WebServer/Documents/beautypost/app/View/Yougo"
	],
	"file_history":
	[
		"/Library/WebServer/Documents/beautypost/app/View/Collection/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminreview/index.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminreviewController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminmonitorController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/MypageController.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Biyo.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmonitor/submit.php",
		"/Library/WebServer/Documents/beautypost/app/View/Review/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Helper/UsefulHelper.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminuser/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminuser/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Review/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmonitor/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmonitor/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/registinput.php",
		"/Library/WebServer/Documents/beautypost/app/View/Admincolumn/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminuser/csvoutput.php",
		"/Library/WebServer/Documents/beautypost/app/View/Layouts/admin.ctp",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminuserController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/ReviewController.php",
		"/Library/WebServer/Documents/beautypost/app/Model/ItemsReview.php",
		"/Library/WebServer/Documents/beautypost/app/Config/core.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Item.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Snsuser.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Blog.php",
		"/Library/WebServer/Documents/beautypost/app/View/Column/index.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Column.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Keyword.php",
		"/Library/WebServer/Documents/beautypost/app/Model/AdminKeyword.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminkeywordController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminkeyword/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Helper/CsvHelper.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminuser/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmonitor/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Admincolumn/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/registconfirm.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/RegistController.php",
		"/Library/WebServer/Documents/beautypost/app/Model/ItemsMonitor.php",
		"/Library/WebServer/Documents/beautypost/app/View/Admincolumn/index.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/GoogleloginController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/TwLoginController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/searchbox.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminattrController.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Attr.php",
		"/Library/WebServer/Documents/beautypost/app/Model/GenreAttr.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminattr/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminattr/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitem/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Type.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/ColumnController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/common/cmnSubContentBlog.php",
		"/Library/WebServer/Documents/beautypost/app/Config/const.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/CollectionController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/Component/PagerComponent.php",
		"/Library/WebServer/Documents/beautypost/app/View/Login/index.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/ForgetpasswordController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Regist/submit.php",
		"/Library/WebServer/Documents/beautypost/app/View/Collection/detail.php",
		"/Library/WebServer/Documents/beautypost/app/View/Layouts/default.ctp",
		"/Library/WebServer/Documents/beautypost/app/View/Regist/input.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/LoginController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/Component/UserCComponent.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/FbconnectController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Mypage/submit.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Fpassword.php",
		"/Library/WebServer/Documents/beautypost/plugins/TwitterKit/Controller/Component/TwitterComponent.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AppController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/ItemList.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminkeyword/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitem/input.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminitemController.php",
		"/Library/WebServer/Documents/beautypost/app/Model/GenreAttrItem.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminattr/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminitemattrController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitem/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitemattr/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitemattr/submit.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminitemattr/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Column/index.html",
		"/Library/WebServer/Documents/beautypost/app/Model/Genre.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/NewsController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminblog/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Column/list.html",
		"/Library/WebServer/Documents/beautypost/app/View/Column/category.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/common/cmnSearchForm.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/Component/ItemCComponent.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/common/cmnSubContentColumn.php",
		"/Library/WebServer/Documents/beautypost/app/View/Column/detail.php",
		"/Library/WebServer/Documents/beautypost/app/View/Column/detail.html",
		"/Library/WebServer/Documents/beautypost/app/View/News/index.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminblogController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminquestion/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminquestion/input.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Question.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/CompareController.php",
		"/Library/WebServer/Documents/beautypost/app/Config/database.php",
		"/Library/WebServer/Documents/beautypost/app/View/Question/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/common/cmnEnquete.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/QuestionController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Question/detail.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminblog/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminquestion/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Question/list.php",
		"/Library/WebServer/Documents/beautypost/app/View/News/detail.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/IndexController.php",
		"/Library/WebServer/Documents/test/html/sample.html",
		"/Library/WebServer/Documents/test/html/css/kjn.css",
		"/Library/WebServer/Documents/beautypost/app/View/Index/index.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminController.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdmincolumnController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmailmagazine/input.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmailmagazine/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminmailmagazine/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/MailMagazine/detail.php",
		"/Library/WebServer/Documents/beautypost/app/View/MailMagazine/index.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AdminmasterController.php",
		"/Library/WebServer/Documents/beautypost/app/Model/Mailmagazine.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/BaseController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Layouts/column.ctp",
		"/Library/WebServer/Documents/beautypost/app/Config/routes.php",
		"/Library/WebServer/Documents/beautypost/app/View/Adminblog/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/AjaxController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Compare/index.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/common/cmnSubContent.php",
		"/Library/WebServer/Documents/beautypost/app/Controller/MailmagazineController.php",
		"/Library/WebServer/Documents/beautypost/app/View/Mypage/confirm.php",
		"/Library/WebServer/Documents/beautypost/app/View/Elements/common/headerContent.php",
		"/Library/WebServer/Documents/beautypost/app/View/Compare/popup.php"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"compare",
			"option",
			"'Compare']",
			"option",
			"()?>",
			"core",
			"between",
			"ItemsReview",
			"age",
			"setdata",
			"valid",
			"comment",
			"snsuserdata",
			"/form",
			"<input type=\"text\"",
			"option",
			"Snsuser",
			"ItemsReview",
			"data",
			"delete",
			"valid",
			"datas",
			"ar",
			"Blog",
			"ブログ",
			"ブログマスタ",
			"Column",
			"admin",
			"Column",
			"search",
			"redirect",
			"Blog",
			"getitembyid",
			"useful",
			"use",
			"option",
			"getitems",
			"Cokumn",
			"attr_id",
			"genreattr",
			"AdminKeyword",
			"Genre",
			"Genres",
			"users",
			"twlogin",
			"mypage",
			"getUserID",
			"getLoginUrl",
			"email",
			"permission",
			"url",
			"class Facebook",
			"Facebook(",
			"app_",
			"app_id",
			"callback",
			"getuser",
			"getUser",
			"function Index()",
			"funtion Index()",
			"ratystar",
			"icon",
			"getitems",
			"delete",
			"Type",
			"zzz",
			"for",
			"getitembyid",
			"group",
			"Type",
			"redirect",
			"option",
			"ption",
			"checkuniq",
			"age",
			"detail",
			"option",
			"Blog",
			"ItemsReview",
			"Review",
			"int",
			"getitems",
			"age",
			"ratystar",
			"star",
			"raty",
			"starrev",
			"2d",
			"radar",
			"Contact",
			">\n",
			"Contact",
			"option",
			"  ",
			"facebook",
			"icon",
			"tag",
			"checked",
			"purpose",
			"checkusername",
			"ORDER BY ,",
			".",
			"(/",
			"..",
			"(/",
			"..",
			".",
			"..",
			".",
			"(/",
			"..",
			"../",
			"(/",
			"..",
			"(/",
			"..",
			".",
			"..",
			";\n",
			".",
			"..",
			"../",
			"$this->webroot",
			"images",
			"?>//",
			"images",
			"model",
			"Questions"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"function index()",
			"/knsc",
			"",
			"Actress/",
			"Index/",
			"",
			"</a></td>",
			"<td><a href=\"<?php echo WEBROOT?>actress/?key=\">",
			"</strong>」",
			"」</strong>",
			"「<strong>",
			"<h2 class=\"kz-header kz-header-point\"><i class=\"ace-icon glyphicon glyphicon-align-left\"></i>&nbsp;",
			"$pingserver[] = array('",
			"',mailsend='2014/",
			"2014/09/08' where name like '%",
			"2014/09/08",
			"09' where name like '%",
			"10' where name like '%",
			"',mailsend='2014",
			"'title'=>'価格','comment'=>\"価格設定\\nについての評価です。\"",
			"1=>array('title'=>'満足度','comment'=>\"ビズランユーザー\\nが5段階評価で\\nレビューした\\n総合的な評価です。\"),",
			"\",\"",
			"bizran",
			"当社",
			"\")",
			"\"),",
			"'comment'=>\"",
			"6,",
			"yougos",
			"(genre_id,title",
			"','",
			",",
			"",
			",",
			"','keywords'=>'');",
			"#06478a",
			",'urlname'=>'','name",
			"ビズラン",
			"'urlname'=>'','name",
			",'title'=>'','children",
			"<?php echo WEBROOT;?>assets",
			"'comment'",
			"kz-btn",
			"<?PHP echo WEBROOT?>assets",
			"",
			"values(2,'",
			"(genre_id,name",
			"'",
			"','",
			"<?php echo WEBROOT;?>",
			".News",
			".Newssite",
			".News",
			".Newssite",
			".News",
			".Newssite",
			".News",
			".Newssite",
			".Users",
			".Newssite.id",
			".User",
			".News",
			"<?php echo $WEBROOT;?>",
			"",
			"\\n",
			"o\" n",
			"1\" v",
			"\">",
			"=\"",
			"",
			"array('",
			"');",
			"','"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 39,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/Model/Genre.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13696,
						"regions":
						{
						},
						"selection":
						[
							[
								10653,
								10653
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 6703.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/View/Adminquestion/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3529,
						"regions":
						{
						},
						"selection":
						[
							[
								1321,
								1321
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/View/Adminfavorite/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1930,
						"regions":
						{
						},
						"selection":
						[
							[
								1132,
								1132
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/Controller/QuestionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5340,
						"regions":
						{
						},
						"selection":
						[
							[
								5092,
								5286
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1857.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/Controller/ReviewController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5020,
						"regions":
						{
						},
						"selection":
						[
							[
								2130,
								2130
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/View/Pages/error.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 633,
						"regions":
						{
						},
						"selection":
						[
							[
								633,
								633
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/View/Adminquestion/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2858,
						"regions":
						{
						},
						"selection":
						[
							[
								1647,
								1647
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/Config/core.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14384,
						"regions":
						{
						},
						"selection":
						[
							[
								1200,
								1200
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "app/View/MailMagazine/detail.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3026,
						"regions":
						{
						},
						"selection":
						[
							[
								517,
								517
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 112.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "app/Controller/ForgetpasswordController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3636,
						"regions":
						{
						},
						"selection":
						[
							[
								2128,
								2128
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 711.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "app/Controller/LoginController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3389,
						"regions":
						{
						},
						"selection":
						[
							[
								1637,
								1637
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 383.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "app/Config/const.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4448,
						"regions":
						{
						},
						"selection":
						[
							[
								1535,
								1535
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "app/View/Index/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16636,
						"regions":
						{
						},
						"selection":
						[
							[
								1132,
								1132
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "app/View/Review/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7403,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 360.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/Library/WebServer/Documents/kjn/app/.htaccess",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 140,
						"regions":
						{
						},
						"selection":
						[
							[
								104,
								104
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "plain text",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "app/View/Elements/common/cmnEnquete.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3572,
						"regions":
						{
						},
						"selection":
						[
							[
								475,
								475
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "app/Controller/AdminquestionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4958,
						"regions":
						{
						},
						"selection":
						[
							[
								1105,
								1105
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 303.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "app/Model/Tenki.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3737,
						"regions":
						{
						},
						"selection":
						[
							[
								1009,
								1009
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 5.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "app/View/Admincolumn/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4029,
						"regions":
						{
						},
						"selection":
						[
							[
								2776,
								2776
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 115,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "app/View/Admincolumn/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2410,
						"regions":
						{
						},
						"selection":
						[
							[
								358,
								358
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 113,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/Model/ItemsMonitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5881,
						"regions":
						{
						},
						"selection":
						[
							[
								1517,
								1517
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 597.0,
						"zoom_level": 1.0
					},
					"stack_index": 114,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "app/Controller/AdminmonitorController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5038,
						"regions":
						{
						},
						"selection":
						[
							[
								3421,
								3421
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1130.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "app/View/Layouts/admin.ctp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9615,
						"regions":
						{
						},
						"selection":
						[
							[
								1043,
								1043
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "html",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Library/WebServer/Documents/test/beautypostapi/php/example1.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2841,
						"regions":
						{
						},
						"selection":
						[
							[
								965,
								965
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 340.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "app/Controller/MypageController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6391,
						"regions":
						{
						},
						"selection":
						[
							[
								1378,
								1378
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 551.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "app/Controller/CollectionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4999,
						"regions":
						{
						},
						"selection":
						[
							[
								4476,
								4476
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1683.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "app/Controller/AdminreviewController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7322,
						"regions":
						{
						},
						"selection":
						[
							[
								2477,
								2477
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 2.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "app/Controller/BaseController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2881,
						"regions":
						{
						},
						"selection":
						[
							[
								766,
								766
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "app/View/Helper/UsefulHelper.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8545,
						"regions":
						{
						},
						"selection":
						[
							[
								3535,
								3535
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 50.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 112,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "app/View/Adminmonitor/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8354,
						"regions":
						{
						},
						"selection":
						[
							[
								7609,
								7621
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 204.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "app/View/Adminmonitor/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8459,
						"regions":
						{
						},
						"selection":
						[
							[
								7436,
								7436
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1207.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 31,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8449,
						"regions":
						{
						},
						"selection":
						[
							[
								2544,
								2544
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "plain text",
							"auto_name": "",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"default_dir": "/Library/WebServer/Documents/beautypost",
							"is_xml": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1121.0,
						"zoom_level": 1.0
					},
					"stack_index": 111,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "app/View/Adminmonitor/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8354,
						"regions":
						{
						},
						"selection":
						[
							[
								8354,
								8354
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1345.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "app/Controller/AppController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5267,
						"regions":
						{
						},
						"selection":
						[
							[
								1136,
								1136
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 288.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "app/View/Adminuser/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6320,
						"regions":
						{
						},
						"selection":
						[
							[
								703,
								703
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 280.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "app/Model/Snsuser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10618,
						"regions":
						{
						},
						"selection":
						[
							[
								1675,
								1675
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 524.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "app/View/Adminkeyword/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2199,
						"regions":
						{
						},
						"selection":
						[
							[
								536,
								536
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 40.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "app/View/Adminfavorite/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2494,
						"regions":
						{
						},
						"selection":
						[
							[
								895,
								895
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "app/Model/ItemsReview.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6031,
						"regions":
						{
						},
						"selection":
						[
							[
								3994,
								3994
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "app/View/Elements/ItemList.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5389,
						"regions":
						{
						},
						"selection":
						[
							[
								640,
								640
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 296.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "app/Controller/IndexController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3378,
						"regions":
						{
						},
						"selection":
						[
							[
								1951,
								1951
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "app/View/Adminitem/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16413,
						"regions":
						{
						},
						"selection":
						[
							[
								14538,
								14538
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 3533.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "app/View/Adminmaster/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2184,
						"regions":
						{
							"TagLint":
							{
								"flags": 2356,
								"icon": "dot",
								"regions":
								[
									[
										2180,
										2183
									]
								],
								"scope": "variable.parameter"
							}
						},
						"selection":
						[
							[
								2162,
								2162
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "app/Controller/Component/UserCComponent.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								1200,
								1200
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 103.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "app/View/Mypage/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4306,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 80.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "app/Controller/GoogleloginController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3750,
						"regions":
						{
						},
						"selection":
						[
							[
								273,
								273
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "app/Controller/MypageController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6391,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "app/Model/Tenki.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3737,
						"regions":
						{
						},
						"selection":
						[
							[
								1769,
								1769
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"open_with_edit": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 698.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "app/Model/ItemsReview.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6031,
						"regions":
						{
						},
						"selection":
						[
							[
								4113,
								4113
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2449.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "app/Controller/BaseController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2881,
						"regions":
						{
						},
						"selection":
						[
							[
								834,
								834
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 246.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "app/Controller/AdminuserController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5068,
						"regions":
						{
						},
						"selection":
						[
							[
								2675,
								2675
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 871.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "app/View/Adminuser/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2124,
						"regions":
						{
						},
						"selection":
						[
							[
								1251,
								1394
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/Model/ItemsMonitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5881,
						"regions":
						{
						},
						"selection":
						[
							[
								5573,
								5573
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2904.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "app/View/Collection/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7357,
						"regions":
						{
						},
						"selection":
						[
							[
								1686,
								1686
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 249.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "app/Model/Item.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6347,
						"regions":
						{
						},
						"selection":
						[
							[
								2244,
								2244
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "app/View/Adminitem/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14809,
						"regions":
						{
						},
						"selection":
						[
							[
								3066,
								3066
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 178.0,
						"translation.y": -0.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "app/View/Adminmaster/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2062,
						"regions":
						{
						},
						"selection":
						[
							[
								789,
								789
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "app/Controller/AdminmasterController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4400,
						"regions":
						{
						},
						"selection":
						[
							[
								3403,
								3403
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1448.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "app/View/Adminquestion/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2878,
						"regions":
						{
						},
						"selection":
						[
							[
								1190,
								1190
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/View/Adminquestion/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3529,
						"regions":
						{
						},
						"selection":
						[
							[
								2189,
								2189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/Controller/QuestionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5340,
						"regions":
						{
						},
						"selection":
						[
							[
								3509,
								3509
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 807.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "app/Model/Question.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3996,
						"regions":
						{
						},
						"selection":
						[
							[
								1800,
								1800
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 914.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "app/View/Column/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6683,
						"regions":
						{
							"TagLint":
							{
								"flags": 2356,
								"icon": "dot",
								"regions":
								[
									[
										6600,
										6603
									]
								],
								"scope": "variable.parameter"
							}
						},
						"selection":
						[
							[
								930,
								930
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "html",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "app/View/Column/category.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4452,
						"regions":
						{
						},
						"selection":
						[
							[
								1052,
								1052
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "app/Model/QuestionLog.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1712,
						"regions":
						{
						},
						"selection":
						[
							[
								816,
								816
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "app/Controller/Component/PagerComponent.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2058,
						"regions":
						{
						},
						"selection":
						[
							[
								856,
								856
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "app/View/Elements/common/cmnEnquete.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3572,
						"regions":
						{
						},
						"selection":
						[
							[
								1685,
								1685
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "app/Controller/MailmagazineController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2564,
						"regions":
						{
						},
						"selection":
						[
							[
								1788,
								1788
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 297.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "app/View/Question/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 464,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "app/View/Question/detail.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3715,
						"regions":
						{
						},
						"selection":
						[
							[
								1876,
								1876
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 688.0,
						"translation.y": -0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "app/View/Helper/UsefulHelper.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8545,
						"regions":
						{
						},
						"selection":
						[
							[
								6009,
								6009
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/Model/ItemsMonitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5881,
						"regions":
						{
						},
						"selection":
						[
							[
								2286,
								2289
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1078.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "app/Controller/CollectionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4999,
						"regions":
						{
						},
						"selection":
						[
							[
								4300,
								4300
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 2091.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "app/View/Collection/m_index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14773,
						"regions":
						{
							"TagLint":
							{
								"flags": 2356,
								"icon": "dot",
								"regions":
								[
									[
										14398,
										14404
									]
								],
								"scope": "variable.parameter"
							}
						},
						"selection":
						[
							[
								2110,
								2110
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "app/View/Compare/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2180,
						"regions":
						{
						},
						"selection":
						[
							[
								687,
								687
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "app/Controller/Component/ItemCComponent.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3900,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "app/Controller/CompareController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5546,
						"regions":
						{
						},
						"selection":
						[
							[
								1877,
								1877
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 694.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "app/View/Compare/popup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10791,
						"regions":
						{
						},
						"selection":
						[
							[
								3775,
								3775
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 66,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 114280,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										277,
										284
									],
									[
										672,
										679
									],
									[
										1151,
										1158
									],
									[
										1591,
										1598
									],
									[
										2155,
										2162
									],
									[
										2822,
										2829
									],
									[
										3374,
										3381
									],
									[
										3665,
										3672
									],
									[
										4015,
										4022
									],
									[
										4110,
										4117
									],
									[
										4796,
										4803
									],
									[
										5559,
										5566
									],
									[
										5786,
										5793
									],
									[
										6058,
										6065
									],
									[
										6251,
										6258
									],
									[
										6508,
										6515
									],
									[
										6693,
										6700
									],
									[
										6923,
										6930
									],
									[
										7039,
										7046
									],
									[
										7303,
										7310
									],
									[
										7395,
										7402
									],
									[
										7621,
										7628
									],
									[
										7859,
										7866
									],
									[
										8142,
										8149
									],
									[
										8331,
										8338
									],
									[
										8609,
										8616
									],
									[
										8860,
										8867
									],
									[
										9181,
										9188
									],
									[
										10121,
										10128
									],
									[
										21872,
										21879
									],
									[
										28969,
										28976
									],
									[
										29055,
										29062
									],
									[
										45348,
										45355
									],
									[
										45759,
										45766
									],
									[
										46013,
										46020
									],
									[
										46262,
										46269
									],
									[
										46656,
										46663
									],
									[
										46899,
										46906
									],
									[
										47157,
										47164
									],
									[
										47500,
										47507
									],
									[
										47708,
										47715
									],
									[
										48036,
										48043
									],
									[
										48272,
										48279
									],
									[
										48581,
										48588
									],
									[
										48874,
										48881
									],
									[
										49193,
										49200
									],
									[
										49600,
										49607
									],
									[
										49782,
										49789
									],
									[
										50143,
										50150
									],
									[
										50325,
										50332
									],
									[
										50712,
										50719
									],
									[
										50964,
										50971
									],
									[
										51302,
										51309
									],
									[
										51532,
										51539
									],
									[
										51740,
										51747
									],
									[
										51916,
										51923
									],
									[
										52295,
										52302
									],
									[
										52765,
										52772
									],
									[
										53090,
										53097
									],
									[
										53401,
										53408
									],
									[
										53850,
										53857
									],
									[
										54155,
										54162
									],
									[
										54545,
										54552
									],
									[
										54781,
										54788
									],
									[
										55338,
										55345
									],
									[
										55435,
										55442
									],
									[
										55868,
										55875
									],
									[
										56055,
										56062
									],
									[
										56510,
										56517
									],
									[
										57039,
										57046
									],
									[
										57332,
										57339
									],
									[
										57885,
										57892
									],
									[
										58208,
										58215
									],
									[
										58474,
										58481
									],
									[
										58691,
										58698
									],
									[
										58961,
										58968
									],
									[
										59073,
										59080
									],
									[
										59428,
										59435
									],
									[
										59742,
										59749
									],
									[
										59911,
										59918
									],
									[
										60185,
										60192
									],
									[
										60375,
										60382
									],
									[
										60642,
										60649
									],
									[
										60660,
										60667
									],
									[
										60793,
										60800
									],
									[
										60892,
										60899
									],
									[
										61067,
										61074
									],
									[
										61373,
										61380
									],
									[
										61473,
										61480
									],
									[
										61580,
										61587
									],
									[
										61762,
										61769
									],
									[
										62037,
										62044
									],
									[
										62136,
										62143
									],
									[
										62311,
										62318
									],
									[
										62777,
										62784
									],
									[
										63091,
										63098
									],
									[
										63260,
										63267
									],
									[
										63534,
										63541
									],
									[
										63724,
										63731
									],
									[
										63991,
										63998
									],
									[
										64009,
										64016
									],
									[
										64244,
										64251
									],
									[
										64344,
										64351
									],
									[
										64451,
										64458
									],
									[
										64706,
										64713
									],
									[
										65063,
										65070
									],
									[
										66322,
										66329
									],
									[
										66792,
										66799
									],
									[
										67317,
										67324
									],
									[
										76208,
										76215
									],
									[
										76491,
										76498
									],
									[
										76697,
										76704
									],
									[
										77166,
										77173
									],
									[
										77554,
										77561
									],
									[
										77759,
										77766
									],
									[
										78073,
										78080
									],
									[
										78293,
										78300
									],
									[
										78653,
										78660
									],
									[
										78985,
										78992
									],
									[
										79305,
										79312
									],
									[
										79580,
										79587
									],
									[
										79733,
										79740
									],
									[
										79805,
										79812
									],
									[
										80032,
										80039
									],
									[
										80306,
										80313
									],
									[
										80548,
										80555
									],
									[
										80708,
										80715
									],
									[
										80968,
										80975
									],
									[
										81090,
										81097
									],
									[
										81428,
										81435
									],
									[
										81570,
										81577
									],
									[
										81900,
										81907
									],
									[
										82165,
										82172
									],
									[
										82472,
										82479
									],
									[
										82750,
										82757
									],
									[
										82999,
										83006
									],
									[
										83246,
										83253
									],
									[
										83599,
										83606
									],
									[
										83962,
										83969
									],
									[
										84097,
										84104
									],
									[
										84306,
										84313
									],
									[
										84494,
										84501
									],
									[
										84813,
										84820
									],
									[
										84927,
										84934
									],
									[
										85180,
										85187
									],
									[
										85563,
										85570
									],
									[
										85767,
										85774
									],
									[
										86072,
										86079
									],
									[
										86477,
										86484
									],
									[
										86811,
										86818
									],
									[
										87043,
										87050
									],
									[
										87258,
										87265
									],
									[
										87306,
										87313
									],
									[
										87576,
										87583
									],
									[
										87824,
										87831
									],
									[
										88110,
										88117
									],
									[
										88321,
										88328
									],
									[
										88588,
										88595
									],
									[
										88881,
										88888
									],
									[
										89122,
										89129
									],
									[
										89375,
										89382
									],
									[
										89594,
										89601
									],
									[
										89810,
										89817
									],
									[
										90067,
										90074
									],
									[
										90282,
										90289
									],
									[
										90582,
										90589
									],
									[
										90642,
										90649
									],
									[
										90843,
										90850
									],
									[
										90921,
										90928
									],
									[
										91097,
										91104
									],
									[
										91206,
										91213
									],
									[
										91389,
										91396
									],
									[
										91504,
										91511
									],
									[
										91687,
										91694
									],
									[
										91802,
										91809
									],
									[
										92025,
										92032
									],
									[
										92279,
										92286
									],
									[
										92608,
										92615
									],
									[
										92716,
										92723
									],
									[
										92870,
										92877
									],
									[
										92981,
										92988
									],
									[
										93212,
										93219
									],
									[
										93302,
										93309
									],
									[
										93450,
										93457
									],
									[
										93538,
										93545
									],
									[
										93753,
										93760
									],
									[
										93866,
										93873
									],
									[
										94010,
										94017
									],
									[
										94127,
										94134
									],
									[
										94271,
										94278
									],
									[
										94388,
										94395
									],
									[
										94573,
										94580
									],
									[
										94635,
										94642
									],
									[
										94934,
										94941
									],
									[
										95607,
										95614
									],
									[
										96214,
										96221
									],
									[
										96887,
										96894
									],
									[
										97538,
										97545
									],
									[
										97625,
										97632
									],
									[
										97676,
										97683
									],
									[
										97742,
										97749
									],
									[
										97801,
										97808
									],
									[
										97875,
										97882
									],
									[
										97942,
										97949
									],
									[
										98195,
										98202
									],
									[
										98579,
										98586
									],
									[
										98614,
										98621
									],
									[
										98772,
										98779
									],
									[
										98807,
										98814
									],
									[
										98937,
										98944
									],
									[
										99206,
										99213
									],
									[
										99368,
										99375
									],
									[
										99442,
										99449
									],
									[
										99543,
										99550
									],
									[
										99677,
										99684
									],
									[
										99695,
										99702
									],
									[
										99807,
										99814
									],
									[
										100041,
										100048
									],
									[
										100060,
										100067
									],
									[
										100073,
										100080
									],
									[
										100086,
										100093
									],
									[
										100178,
										100185
									],
									[
										100310,
										100317
									],
									[
										100442,
										100449
									],
									[
										100581,
										100588
									],
									[
										100602,
										100609
									],
									[
										100623,
										100630
									],
									[
										100721,
										100728
									],
									[
										100950,
										100957
									],
									[
										101108,
										101115
									],
									[
										101129,
										101136
									],
									[
										101226,
										101233
									],
									[
										101571,
										101578
									],
									[
										101765,
										101772
									],
									[
										101957,
										101964
									],
									[
										101997,
										102004
									],
									[
										102235,
										102242
									],
									[
										102253,
										102260
									],
									[
										102367,
										102374
									],
									[
										102631,
										102638
									],
									[
										102678,
										102685
									],
									[
										102922,
										102929
									],
									[
										102969,
										102976
									],
									[
										103268,
										103275
									],
									[
										103564,
										103571
									],
									[
										103733,
										103740
									],
									[
										103998,
										104005
									],
									[
										104141,
										104148
									],
									[
										104368,
										104375
									],
									[
										104553,
										104560
									],
									[
										104862,
										104869
									],
									[
										105057,
										105064
									],
									[
										105149,
										105156
									],
									[
										105499,
										105506
									],
									[
										105723,
										105730
									],
									[
										105990,
										105997
									],
									[
										106204,
										106211
									],
									[
										106545,
										106552
									],
									[
										106833,
										106840
									],
									[
										107143,
										107150
									],
									[
										107313,
										107320
									],
									[
										107610,
										107617
									],
									[
										107769,
										107776
									],
									[
										108179,
										108186
									],
									[
										108207,
										108214
									],
									[
										108423,
										108430
									],
									[
										108529,
										108536
									],
									[
										108844,
										108851
									],
									[
										108866,
										108873
									],
									[
										109027,
										109034
									],
									[
										109188,
										109195
									],
									[
										109222,
										109229
									],
									[
										109240,
										109247
									],
									[
										109267,
										109274
									],
									[
										109563,
										109570
									],
									[
										109777,
										109784
									],
									[
										109868,
										109875
									],
									[
										110013,
										110020
									],
									[
										110052,
										110059
									],
									[
										110074,
										110081
									],
									[
										110154,
										110161
									],
									[
										110364,
										110371
									],
									[
										110412,
										110419
									],
									[
										110437,
										110444
									],
									[
										110460,
										110467
									],
									[
										110500,
										110507
									],
									[
										110581,
										110588
									],
									[
										110630,
										110637
									],
									[
										110806,
										110813
									],
									[
										110829,
										110836
									],
									[
										110973,
										110980
									],
									[
										111219,
										111226
									],
									[
										111634,
										111641
									],
									[
										111801,
										111808
									],
									[
										112271,
										112278
									],
									[
										112569,
										112576
									],
									[
										112851,
										112858
									],
									[
										113007,
										113014
									],
									[
										113212,
										113219
									],
									[
										113474,
										113481
									],
									[
										113725,
										113732
									],
									[
										114130,
										114137
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3610,
								3614
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "find results",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/Library/WebServer/Documents/beautypost",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 31115.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "app/Model/ItemsReview.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6031,
						"regions":
						{
						},
						"selection":
						[
							[
								3994,
								3994
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 2364.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "app/View/Collection/detail.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23617,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								564
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "app/View/Review/monitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5547,
						"regions":
						{
						},
						"selection":
						[
							[
								3799,
								3799
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 606.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "app/Controller/MypageController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6391,
						"regions":
						{
						},
						"selection":
						[
							[
								1918,
								1918
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/Model/ItemsMonitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5881,
						"regions":
						{
						},
						"selection":
						[
							[
								4549,
								4549
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 431.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "app/Model/Snsuser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10618,
						"regions":
						{
						},
						"selection":
						[
							[
								9370,
								9370
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4899.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "app/View/Layouts/default.ctp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3784,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "html",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "app/View/Elements/common/headerGnav.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1109,
						"regions":
						{
						},
						"selection":
						[
							[
								1109,
								1109
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/Controller/QuestionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5340,
						"regions":
						{
						},
						"selection":
						[
							[
								4744,
								4744
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1821.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "app/Controller/BaseController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2881,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "app/Controller/AppController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5267,
						"regions":
						{
						},
						"selection":
						[
							[
								2845,
								2845
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 904.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "app/View/Compare/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2180,
						"regions":
						{
						},
						"selection":
						[
							[
								951,
								951
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "app/Controller/CompareController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5546,
						"regions":
						{
						},
						"selection":
						[
							[
								4974,
								4974
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1715.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "app/View/Adminattr/input.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2241,
						"regions":
						{
						},
						"selection":
						[
							[
								1278,
								1278
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "app/View/Adminitem/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14809,
						"regions":
						{
						},
						"selection":
						[
							[
								12804,
								12804
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 2853.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "app/Model/Genre.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13696,
						"regions":
						{
						},
						"selection":
						[
							[
								9870,
								9870
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "app/Model/GenreAttr.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4343,
						"regions":
						{
						},
						"selection":
						[
							[
								2256,
								2256
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1158.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "app/View/Login/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5910,
						"regions":
						{
							"TagLint":
							{
								"flags": 2356,
								"icon": "dot",
								"regions":
								[
									[
										3715,
										3718
									]
								],
								"scope": "variable.parameter"
							}
						},
						"selection":
						[
							[
								302,
								314
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "app/Model/Question.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3996,
						"regions":
						{
						},
						"selection":
						[
							[
								3429,
								3429
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1500.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "app/Model/Mailmagazine.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3358,
						"regions":
						{
						},
						"selection":
						[
							[
								1128,
								1128
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "app/Controller/Component/ItemCComponent.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3900,
						"regions":
						{
						},
						"selection":
						[
							[
								581,
								581
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 99.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "app/Controller/MailmagazineController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2564,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 361.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "app/Config/const.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4448,
						"regions":
						{
						},
						"selection":
						[
							[
								1477,
								1477
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 75,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "plain text",
							"auto_name": "",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/Library/WebServer/Documents/beautypost",
							"is_xml": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "app/View/Adminmonitor/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2808,
						"regions":
						{
						},
						"selection":
						[
							[
								475,
								475
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 58.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/Model/ItemsMonitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5881,
						"regions":
						{
						},
						"selection":
						[
							[
								1962,
								1962
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "app/Controller/CollectionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4999,
						"regions":
						{
						},
						"selection":
						[
							[
								3807,
								3807
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "app/View/Collection/detail.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23617,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5609.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/Controller/ReviewController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5020,
						"regions":
						{
						},
						"selection":
						[
							[
								2405,
								2405
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 807.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "app/View/Compare/popup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10791,
						"regions":
						{
						},
						"selection":
						[
							[
								1115,
								1115
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": -0.0,
						"translation.y": 82.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "app/View/Helper/UsefulHelper.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8545,
						"regions":
						{
						},
						"selection":
						[
							[
								2421,
								2421
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1309.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "app/Controller/CompareController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5546,
						"regions":
						{
						},
						"selection":
						[
							[
								2615,
								2615
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 969.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "app/View/Compare/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2180,
						"regions":
						{
						},
						"selection":
						[
							[
								354,
								354
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "app/View/Maker/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4552,
						"regions":
						{
						},
						"selection":
						[
							[
								2477,
								2477
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 17.0,
						"translation.y": 553.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "app/View/glossary/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1721,
						"regions":
						{
						},
						"selection":
						[
							[
								420,
								420
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/Model/ItemsMonitor.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5881,
						"regions":
						{
						},
						"selection":
						[
							[
								5250,
								5269
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 2345.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "app/Controller/CompareController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5546,
						"regions":
						{
						},
						"selection":
						[
							[
								5042,
								5042
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "php",
							"auto_complete": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1784.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "beautypost.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"itemlist",
				"app/View/Elements/ItemList.php"
			],
			[
				"collection/detail",
				"app/View/Collection/detail.php"
			],
			[
				"glossary",
				"app/View/glossary/index.php"
			],
			[
				"maker/inde",
				"app/View/Maker/index.php"
			],
			[
				"usercc",
				"app/Controller/Component/UserCComponent.php"
			],
			[
				"core",
				"app/Config/core.php"
			],
			[
				"comparecont",
				"app/Controller/CompareController.php"
			],
			[
				"compare/inde",
				"app/View/Compare/index.php"
			],
			[
				"compare/popup",
				"app/View/Compare/popup.php"
			],
			[
				"useful",
				"app/View/Helper/UsefulHelper.php"
			],
			[
				"adminattr/input",
				"app/View/Adminattr/input.php"
			],
			[
				"compare",
				"app/Controller/CompareController.php"
			],
			[
				"review/moniotr",
				"app/View/Review/monitor.php"
			],
			[
				"itemsmonitor",
				"app/Model/ItemsMonitor.php"
			],
			[
				"itemsreview",
				"app/Model/ItemsReview.php"
			],
			[
				"reviewcont",
				"app/Controller/ReviewController.php"
			],
			[
				"review/monitor",
				"app/View/Review/monitor.php"
			],
			[
				"collectioncont",
				"app/Controller/CollectionController.php"
			],
			[
				"adminmonitor/input",
				"app/View/Adminmonitor/input.php"
			],
			[
				"itemmonitor",
				"app/Model/ItemsMonitor.php"
			],
			[
				"adminmonitorcont",
				"app/Controller/AdminmonitorController.php"
			],
			[
				"adminmonitor/inde",
				"app/View/Adminmonitor/index.php"
			],
			[
				"adminuser/index",
				"app/View/Adminuser/index.php"
			],
			[
				"adminitem/confirm",
				"app/View/Adminitem/confirm.php"
			],
			[
				"adminitem/input",
				"app/View/Adminitem/input.php"
			],
			[
				"itemcc",
				"app/Controller/Component/ItemCComponent.php"
			],
			[
				"compare/index",
				"app/View/Compare/index.php"
			],
			[
				"genre",
				"app/Model/Genre.php"
			],
			[
				"popup",
				"app/View/Compare/popup.php"
			],
			[
				"genreattr",
				"app/Model/GenreAttr.php"
			],
			[
				"appcont",
				"app/Controller/AppController.php"
			],
			[
				"mailmagazinecont",
				"app/Controller/MailmagazineController.php"
			],
			[
				"mailmagazine/detail",
				"app/View/MailMagazine/detail.php"
			],
			[
				"mailmagazine",
				"app/Model/Mailmagazine.php"
			],
			[
				"question",
				"app/Model/Question.php"
			],
			[
				"questioncont",
				"app/Controller/QuestionController.php"
			],
			[
				"const",
				"app/Config/const.php"
			],
			[
				"gnav",
				"app/View/Elements/common/headerGnav.php"
			],
			[
				"enq",
				"app/View/Elements/common/cmnEnquete.php"
			],
			[
				"headergnav",
				"app/View/Elements/common/headerGnav.php"
			],
			[
				"default",
				"app/View/Layouts/default.ctp"
			],
			[
				"collection/inde",
				"app/View/Collection/index.php"
			],
			[
				"snsuser",
				"app/Model/Snsuser.php"
			],
			[
				"adminusercont",
				"app/Controller/AdminuserController.php"
			],
			[
				"column/category.php",
				"app/View/Column/category.php"
			],
			[
				"column/inde",
				"app/View/Column/index.html"
			],
			[
				"basecont",
				"app/Controller/BaseController.php"
			],
			[
				"login/inde",
				"app/View/Login/index.php"
			],
			[
				"logincont",
				"app/Controller/LoginController.php"
			],
			[
				"question/detail",
				"app/View/Question/detail.php"
			],
			[
				"adminquestion",
				"app/Controller/AdminquestionController.php"
			],
			[
				"adminquestioncont",
				"app/Controller/AdminquestionController.php"
			],
			[
				"adminquestion/inde",
				"app/View/Adminquestion/index.php"
			],
			[
				"index/index",
				"app/View/Index/index.php"
			],
			[
				"appconet",
				"app/Controller/AppController.php"
			],
			[
				"forgetpasw",
				"app/Controller/ForgetpasswordController.php"
			],
			[
				"collection",
				"app/Controller/CollectionController.php"
			],
			[
				"detail",
				"app/View/Collection/detail.php"
			],
			[
				"monitor",
				"app/Model/ItemsMonitor.php"
			],
			[
				"review/input",
				"app/View/Review/input.php"
			],
			[
				"mypageco",
				"app/Controller/MypageController.php"
			],
			[
				"mypage/inde",
				"app/View/Mypage/index.php"
			],
			[
				"tenki",
				"app/Model/Tenki.php"
			],
			[
				"adminquestion/index",
				"app/View/Adminquestion/index.php"
			],
			[
				"question/input",
				"app/View/Question/input.php"
			],
			[
				"questionlog",
				"app/Model/QuestionLog.php"
			],
			[
				"element/cmn",
				"app/View/Elements/common/cmnEnquete.php"
			],
			[
				"pager",
				"app/Controller/Component/PagerComponent.php"
			],
			[
				"questionco",
				"app/Controller/QuestionController.php"
			],
			[
				"adminquestion/confirm",
				"app/View/Adminquestion/confirm.php"
			],
			[
				"adminquestion/input",
				"app/View/Adminquestion/input.php"
			],
			[
				"element/qu",
				"app/View/Elements/common/cmnEnquete.php"
			],
			[
				"adminfavorite/inde",
				"app/View/Adminfavorite/index.php"
			],
			[
				"adminmastercont",
				"app/Controller/AdminmasterController.php"
			],
			[
				"adminmaster/confirm",
				"app/View/Adminmaster/confirm.php"
			],
			[
				"adminmaster/input",
				"app/View/Adminmaster/input.php"
			],
			[
				"item",
				"app/Model/Item.php"
			],
			[
				"indexcont",
				"app/Controller/IndexController.php"
			],
			[
				"adminfavorite/input",
				"app/View/Adminfavorite/input.php"
			],
			[
				"adminkeyword/input",
				"app/View/Adminkeyword/input.php"
			],
			[
				"adminuser/input",
				"app/View/Adminuser/input.php"
			],
			[
				"baseco",
				"app/Controller/BaseController.php"
			],
			[
				"adminreview",
				"app/Controller/AdminreviewController.php"
			],
			[
				"mypage",
				"app/Controller/MypageController.php"
			],
			[
				"google",
				"app/Controller/GoogleloginController.php"
			],
			[
				"mypagecont",
				"app/Controller/MypageController.php"
			],
			[
				"mypage/index",
				"app/View/Mypage/index.php"
			],
			[
				"appco",
				"app/Controller/AppController.php"
			],
			[
				"admincolumn/inpu",
				"app/View/Admincolumn/input.php"
			],
			[
				"admincolumn/inde",
				"app/View/Admincolumn/index.php"
			],
			[
				"admincolumn/",
				"app/View/Admincolumn/input.php"
			],
			[
				"adminmonitor",
				"app/Controller/AdminmonitorController.php"
			],
			[
				"admincolumn/input",
				"app/View/Admincolumn/input.php"
			],
			[
				"adminctp",
				"app/View/Layouts/admin.ctp"
			],
			[
				"adminmonitor/index",
				"app/View/Adminmonitor/index.php"
			],
			[
				"review/confirm",
				"app/View/Review/confirm.php"
			],
			[
				"admincolumn/confirm",
				"app/View/Admincolumn/confirm.php"
			],
			[
				"registconfirm",
				"app/View/Elements/registconfirm.php"
			],
			[
				"adminmonitor/confirm",
				"app/View/Adminmonitor/confirm.php"
			],
			[
				"registcont",
				"app/Controller/RegistController.php"
			],
			[
				"registinput",
				"app/View/Elements/registinput.php"
			],
			[
				"adminmonitorco",
				"app/Controller/AdminmonitorController.php"
			],
			[
				"adminuser",
				"app/View/Adminuser/index.php"
			],
			[
				"adminuser/confirm",
				"app/View/Adminuser/confirm.php"
			],
			[
				"adminuser/inde",
				"app/View/Adminuser/index.php"
			],
			[
				"usercont",
				"app/Controller/AdminuserController.php"
			],
			[
				"itemre",
				"app/Model/ItemsReview.php"
			],
			[
				"admin.ctp",
				"app/View/Layouts/admin.ctp"
			],
			[
				"adminkeyword/inde",
				"app/View/Adminkeyword/index.php"
			],
			[
				"adminkeywordcont",
				"app/Controller/AdminkeywordController.php"
			],
			[
				"adminkeyword",
				"app/Model/AdminKeyword.php"
			],
			[
				"keyword",
				"app/Model/Keyword.php"
			],
			[
				"column",
				"app/Model/Column.php"
			],
			[
				"blog",
				"app/Model/Blog.php"
			],
			[
				"adminreview/inde",
				"app/View/adminreview/index.php"
			],
			[
				"itemsre",
				"app/Model/ItemsReview.php"
			],
			[
				"reviewco",
				"app/Controller/ReviewController.php"
			],
			[
				"admin.ct",
				"app/View/Layouts/admin.ctp"
			],
			[
				"collection/de",
				"app/View/Collection/detail.php"
			],
			[
				"ajaxco",
				"app/Controller/AjaxController.php"
			],
			[
				"attr",
				"app/Model/Attr.php"
			],
			[
				"collectioncon",
				"app/Controller/CollectionController.php"
			],
			[
				"detailcont",
				"/Library/WebServer/Documents/beautypost/app/Controller/MailmagazineController.php"
			],
			[
				"compare/pop",
				"app/View/Compare/popup.php"
			],
			[
				"genreattritem",
				"app/Model/GenreAttrItem.php"
			],
			[
				"adminitemattr",
				"app/Controller/AdminitemattrController.php"
			],
			[
				"compare/po",
				"app/View/Compare/popup.php"
			],
			[
				"usefule",
				"app/View/Helper/UsefulHelper.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 265.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
